{"version":3,"sources":["firebase.js","routes/Routes.js","App.js","serviceWorker.js","index.js","context/NextMonthModal.js","context/Context.js"],"names":["functions","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","fireStore","firestore","storage","PrivateRoute","RouteComponent","component","rest","currentUser","useContext","AuthContext","render","routeProps","to","NoUserRoute","UserHome","lazy","OrgBoard","HattingMaterial","OIC","StatGroups","FlowChartWrapper","QuotaForm","AddEmployee","PostWrapper","EmployeeWrapper","HattingWrapper","ProgressBoard","StatSubmissionContainer","Login","CreateAccount","Header","ManagementDashboard","FourZeroFour","TestStat","DragDropContext","HTML5Backend","useState","loading","setLoading","newUser","setNewUser","modalOpen","setModalOpen","useEffect","onAuthStateChanged","loadingScreen","style","textAlign","marginTop","fallback","className","exact","path","displayName","props","span","color","paddingBottom","onClick","title","visible","closable","footer","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","d","Date","month","getMonth","year","getFullYear","NextMonthModal","workDays","setWorkDays","nextMonth","setNextMonth","setThisMonth","lastWeekEnding","setLastWeekEnding","collection","doc","dbKey","get","snap","data","useEmulator","margin","display","selectedDays","onDayClick","day","selected","concat","selectedIndex","findIndex","selectedDay","DateUtils","isSameDay","splice","push","sort","a","b","canChangeMonth","length","docName","moment","format","set","current","id","workingDays","update","setNextMonthModal","parsedWorkDays","forEach","parse","httpsCallable","monthEndingFunction","message","error","submitWorkDays","React","createContext","AuthProvider","children","setCurrentUser","userInfo","setUserInfo","setDbKey","selectedStatGroup","setSelectedStatGroup","selectedFlowChart","setSelectedFlowChart","flowChartNodeSelected","setFlowChartNodeSelected","flowChart","setFlowChart","node","setNode","nextTerminals","setNextTerminals","lastArr","setLastArr","hattingMaterial","setHattingMaterial","allFlowCharts","setAllFlowCharts","selectedPostInFlowChart","setSelectedPostInFlowChart","activeMonth","notes","setNotes","dbArr","setDbArr","nextMonthModal","managementDashboard","setManagementDashboard","where","uid","onSnapshot","docs","console","log","res","notesTemp","note","dbArrTemp","map","item","flowChartsTemp","elements","startPoint","flowChartNavigationNext","lastArrTemp","postId","nextEdge","source","label","filter","e","target","Provider","value","logout","signOut","goBack","pop","flowChartNavigationLast","clearFlowChart","class","onCancel"],"mappings":"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","file":"static/js/main.4781d303.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/storage'\nimport 'firebase/functions'\n\nvar config = {\n    apiKey: \"AIzaSyDwvSq9PggZ8D0WVEXcoRqh81KMWsHC-Lo\",\n    authDomain: \"ddsdashboard-66cc9.firebaseapp.com\",\n    projectId: \"ddsdashboard-66cc9\",\n    storageBucket: \"ddsdashboard-66cc9.appspot.com\",\n    messagingSenderId: \"1073517353467\",\n    appId: \"1:1073517353467:web:4740b158e495f9d14b135e\",\n    measurementId: \"G-SSGH2NDCX7\"\n}\n\nexport const app = firebase.initializeApp(config);\n//firebase.firestore().settings({ experimentalForceLongPolling: true });\nexport const functions = firebase.functions();\nexport const auth = firebase.auth();\nexport const fireStore = firebase.firestore();\nexport const storage = firebase.storage();","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { AuthContext } from '../context/Context';\n\nexport const PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n  const {currentUser } = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={routeProps =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to={\"/login\"} />\n        )\n      }\n    />\n  );\n};\n\nexport const NoUserRoute = ({ component: RouteComponent, ...rest }) => {\n    const {currentUser} = useContext(AuthContext);\n    return (\n      <Route\n        {...rest}\n        render={routeProps =>\n          !currentUser ? (\n            <RouteComponent {...routeProps} />\n          ) : (\n            <Redirect to={\"/\"} />\n          )\n        }\n      />\n    );\n  };\n\n\n// TODO - Update AdminRoute. Currently applies to any user. Needs admin logic\n\nexport const AdminRoute = ({ component: RouteComponent, ...rest }) => {\n    const {userInfo} = useContext(AuthContext);\n    return (\n      <Route\n        {...rest}\n        render={routeProps =>\n          userInfo && userInfo.admin ? (\n            <RouteComponent {...routeProps} />\n          ) : (\n            <Redirect to={\"/\"} />\n          )\n        }\n      />\n    );\n  };","import React, { useState, useEffect, lazy, Suspense } from 'react';\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport { DragDropContext } from 'react-dnd'\nimport { Col, Modal, Button } from 'antd';\nimport { AuthProvider } from './context/Context';\nimport { fireStore, auth } from './firebase';\nimport firebase from 'firebase/app';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n} from \"react-router-dom\";\nimport { PrivateRoute, NoUserRoute } from './routes/Routes';\n\nimport './styles/App.less'\n\nconst UserHome = lazy(() => import('./components/userHome/UserHome'))\nconst OrgBoard = lazy(() => import('./components/orgBoard/OrgBoard'))\nconst HattingMaterial = lazy(() => import('./components/hattingMaterial/HattingMaterialWrapper'))\nconst OIC = lazy(() => import('./components/oic/OIC'))\nconst StatGroups = lazy(() => import('./components/oic/statGroup/StatGroupWrapper'))\nconst FlowChartWrapper = lazy(() => import('./components/flowCharts/FlowChartWrapper'))\nconst QuotaForm = lazy(() => import('./components/quotaGraphs/QuotaForm'))\nconst AddEmployee = lazy(() => import('./components/employee/AddEmployee'))\nconst PostWrapper = lazy(() => import('./components/posts/PostWrapper'))\nconst EmployeeWrapper = lazy(() => import('./components/employee/EmployeeWrapper'))\nconst HattingWrapper = lazy(() => import('./components/newHatting/HattingWrapper'))\nconst ProgressBoard = lazy(() => import('./components/progressBoard/ProgressBoardWrapper'))\nconst StatSubmissionContainer = lazy(() => import('./components/statSubmission/StatSubmissionContainer'))\nconst Login = lazy(() => import('./components/login/Login'))\nconst CreateAccount = lazy(() => import('./components/createAccount/CreateAccount'))\nconst Header = lazy(() => import('./components/header/Header'))\nconst ManagementDashboard = lazy(() => import('./components/managementDashboard/ManagementDashboardWrapper'))\nconst FourZeroFour = lazy(() => import('./components/404/FourZeroFour'))\n\nconst TestStat = lazy(() => import('./components/testStat/TestStatWrapper'))\n\nfunction App() {\n\n    const [loading, setLoading] = useState(true)\n    const [newUser, setNewUser] = useState(null)\n    const [modalOpen, setModalOpen] = useState(false)\n\n    useEffect(() => {\n        auth.onAuthStateChanged((newUser) => {\n            setNewUser(newUser);\n            setLoading(false)\n        })\n    }, [])\n\n    let loadingScreen = <h2 style={{ textAlign: 'center', marginTop: '15em' }}>Loading Component</h2>\n\n    return (\n        <AuthProvider>\n            <Suspense fallback={<div>{loadingScreen}</div>}>\n                <Router>\n                    <div className='app'>\n                        <Header />\n                        {loading ? <div>{loadingScreen}</div> :\n                            <Switch>\n\n                                <PrivateRoute exact path=\"/\" component={newUser && newUser.displayName === 'kiosk' ? OrgBoard : UserHome} />\n                                <PrivateRoute exact path=\"/org-board\" component={OrgBoard} />\n                                <PrivateRoute exact path=\"/OIC\" component={OIC} />\n                                <PrivateRoute exact path=\"/stat-groups\" component={StatGroups} />\n                                <PrivateRoute exact path=\"/quota-graph-settings\" component={QuotaForm} />\n                                <PrivateRoute exact path=\"/hatting-material/:location\" component={HattingMaterial} />\n                                <PrivateRoute exact path=\"/flow-charts\" component={FlowChartWrapper} />\n                                <PrivateRoute exact path=\"/flow-charts/:flowChartId\" component={FlowChartWrapper} />\n                                <PrivateRoute exact path=\"/add-employee\" component={AddEmployee} />\n                                <PrivateRoute exact path=\"/post\" component={PostWrapper} />\n                                <PrivateRoute exact path=\"/post/:postId\" component={PostWrapper} />\n                                <PrivateRoute exact path=\"/employee/:uid\" component={EmployeeWrapper} />\n                                <PrivateRoute exact path=\"/stat-submission\" component={StatSubmissionContainer} />\n                                <PrivateRoute exact path=\"/hatting\" component={HattingWrapper} />\n                                <PrivateRoute exact path=\"/progress-board\" component={ProgressBoard} />\n\n                                <PrivateRoute exact path=\"/test\" component={TestStat} />\n\n                                <PrivateRoute exact path=\"/management-dashboard\" component={ManagementDashboard} />\n\n                                <NoUserRoute exact path=\"/login\" component={Login} />\n                                <NoUserRoute exact path=\"/create-account\" component={CreateAccount} />\n\n                                <Route render={(props) => <FourZeroFour {...props} />}/>\n                                \n                            </Switch>}\n                        \n                        <Col span={24} className='footer' style={{ color: '#dddddd', textAlign: 'center', marginTop: '2em', paddingBottom: '2em' }}>Based on the works of L. Ron Hubbard and powered by The Hubbard&reg; Management System <span onClick={() => setModalOpen(true)}><u>Copyright-Trademark Info</u></span></Col>\n                        <Modal\n                            title='Copyright-Trademark Information'\n                            visible={modalOpen}\n                            closable={false}\n                            footer={null}\n                        //width={800}\n                        >\n                            <p>&reg; 2021 DDS Dashboard. All Rights Reserved.</p>\n                            <p>DDS Dashboard logo is a trademark owned by DDS Dashboard LLC.</p>\n                            <p>All material available in this software application is protected by copyright laws and international copyright treaty provisions.  Users are not authorized to download or transmit any of these materials electronically, or to otherwise reproduce any of the material in any form or by any means, electronic or mechanical, including data storage and retrieval systems, recording, printing or photocopying.</p>\n                            <p>Grateful acknowledgment is made to L. Ron Hubbard Library for permission to reproduce selections from the copyrighted works of L. Ron Hubbard. </p>\n                            <p>HUBBARD is a trademark and is used pursuant to a licensing agreement.</p>\n                            <p>IA # ....</p>\n                            <br />\n                            <Button onClick={() => setModalOpen(false)}>Close</Button>\n                        </Modal>\n                    </div>\n                </Router>\n            </Suspense>\n        </AuthProvider>\n    );\n}\n\nexport default DragDropContext(HTML5Backend)(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useEffect, useState } from 'react';\nimport { fireStore, auth, functions } from '../firebase';\nimport firebase from 'firebase/app';\nimport { Row, Col, Button, message } from 'antd';\nimport moment from \"moment\";\nimport DayPicker, { DateUtils } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nlet d = new Date();\nlet month = d.getMonth()\nlet year = d.getFullYear()\n\nfunction NextMonthModal(props) {\n\n    const [workDays, setWorkDays] = useState([])\n    //const [daysSet, setDaysSet] = useState(false)\n    const [nextMonth, setNextMonth] = useState(null)\n    const [thisMonth, setThisMonth] = useState(null)\n    const [lastWeekEnding, setLastWeekEnding] = useState(null)\n    const [lastWeekId, setLastWeekId] = useState(null)\n\n    useEffect(() => {\n        setNextMonth(new Date(year, month + 1));\n        setThisMonth(new Date(year, month))\n        fireStore.collection(\"users\").doc(props.dbKey).get().then((snap) => {\n            setLastWeekEnding(snap.data().lastWeekEnding);\n        })\n    }, [])\n\n    let handleDayClick = (day, { selected }) => {\n        \n            const selectedDays = workDays.concat();\n            if (selected) {\n                const selectedIndex = selectedDays.findIndex(selectedDay =>\n                    DateUtils.isSameDay(selectedDay, day)\n                );\n                selectedDays.splice(selectedIndex, 1);\n            } else {\n                selectedDays.push(day);\n            }\n\n            selectedDays.sort(function (a, b) {\n                return new Date(a) - new Date(b);\n            });\n\n            setWorkDays(selectedDays);\n    }\n\n                                        // ------------------- EMULATOR STUFF ----------------------------\n                                        firebase.auth().useEmulator('http://localhost:9099/');\n                                        functions.useEmulator(\"localhost\", 5001);\n                                        // ---\n\n    let submitWorkDays = () => {\n        if (workDays.length) {\n            //console.log(Date.parse(moment(nextMonth).format('MMMMYYYY')))\n            let docName = moment(nextMonth).format('MMMMYYYY')\n            fireStore.collection('users').doc(props.dbKey).collection('quotaGraphs').doc(docName).set({\n                current: false,\n                id: docName,\n                month: moment(nextMonth).format('MMMM'),  \n                workingDays: workDays\n            })\n            fireStore.collection('users').doc(props.dbKey).update({\n                setNextMonth: false\n            })\n            props.setNextMonthModal(false)\n            let parsedWorkDays = []\n            workDays.forEach((day) => {\n                parsedWorkDays.push(Date.parse(day));\n            })\n\n            var monthEndingFunction = firebase.functions().httpsCallable('monthEndingFunction');\n            monthEndingFunction({ dbKey: props.dbKey, workDays: parsedWorkDays, lastWeekEnding: lastWeekEnding, month: Date.parse(moment(nextMonth).format('MMMMYYYY')) });\n\n        } else {\n            message.error('Some days must be selected')\n        }\n    }\n\n    return (\n        <div className='nextMonthModal'>\n           \n           <div style={{ textAlign: 'center' }}><h2>Please Select Next Month's Work Days</h2></div>\n            <div style={{  margin: '0 auto', display: 'table' }}>\n                <DayPicker\n                    selectedDays={workDays}\n                    onDayClick={handleDayClick}\n                    canChangeMonth={false}\n                    month={nextMonth}\n                />\n            </div>\n            <Button onClick={() => submitWorkDays()}>Submit</Button>\n\n        </div>\n    )\n}\n\nexport default NextMonthModal;","import React, { useEffect, useState } from 'react';\nimport { auth, fireStore } from '../firebase';\nimport { Modal } from 'antd';\nimport NextMonthModal from './NextMonthModal';\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n\n    const [currentUser, setCurrentUser] = useState(null);\n    const [userInfo, setUserInfo] = useState(null)\n    const [dbKey, setDbKey] = useState(null)\n\n    const [selectedStatGroup, setSelectedStatGroup] = useState(null)\n    const [selectedFlowChart, setSelectedFlowChart] = useState(null)\n\n    const [flowChartNodeSelected, setFlowChartNodeSelected] = useState(null)\n    const [flowChart, setFlowChart] = useState(null)\n    const [node, setNode] = useState(null)\n    const [nextTerminals, setNextTerminals] = useState(null)\n    const [lastArr, setLastArr] = useState([])\n\n    const [hattingMaterial, setHattingMaterial] = useState(null)\n\n    const [allFlowCharts, setAllFlowCharts] = useState(null)\n    const [selectedPostInFlowChart, setSelectedPostInFlowChart] = useState(null)\n\n    const [workingDays, setWorkingDays] = useState([])\n    const [activeMonth, setActiveMonth] = useState(null)\n\n    const [notes, setNotes] = useState(null)\n\n    const [dbArr, setDbArr] = useState(null)\n\n    const [nextMonthModal, setNextMonthModal] = useState(false)\n\n    const [managementDashboard, setManagementDashboard] = useState(false)\n\n    useEffect(() => {\n        auth.onAuthStateChanged(setCurrentUser)\n    }, []);\n\n    useEffect(() => {\n        if (currentUser) {\n            \n            fireStore.collection(\"users\").where(\"uid\", \"array-contains\", currentUser.uid).onSnapshot((snap) => {\n                if (snap.docs[0].data().managementDashboard) {\n                    setManagementDashboard(true)\n                    console.log(snap.docs[0].data().managementDashboard);\n                }\n                setDbKey(snap.docs[0].id)\n                fireStore.collection(\"users\").doc(snap.docs[0].id).collection('employees').doc(currentUser.uid).get().then((res) => {\n                    setUserInfo(res.data());\n                })\n                fireStore.collection(\"users\").doc(snap.docs[0].id).collection('statGroup').doc('All Stats').get().then((res) => {\n                    setSelectedStatGroup(res.data());\n                })\n                fireStore.collection(\"users\").doc(snap.docs[0].id).collection('notes').onSnapshot( async (snap) => {\n                    let notesTemp = []\n                    await snap.forEach((note) => {\n                        notesTemp.push(note.data());\n                    })\n                    setNotes(notesTemp)\n                })\n                fireStore.collection(\"users\").doc(snap.docs[0].id).collection('orgBoard').onSnapshot( async (res) => {\n                    let dbArrTemp = []\n                    await res.docs.map((item) => {\n                        dbArrTemp.push(item.data());\n                    });\n                    setDbArr(dbArrTemp);\n                })\n                fireStore.collection(\"users\").doc(snap.docs[0].id).collection('hattingMaterial').doc('hattingMaterial').onSnapshot((snap) => {\n                    setHattingMaterial(snap.data());\n                })\n                fireStore.collection(\"users\").doc(snap.docs[0].id).collection('flowCharts').onSnapshot(async(snap) => {\n                    let flowChartsTemp = []\n                    await snap.docs.forEach((item) => {\n                        flowChartsTemp.push(item.data())\n                    })\n                    setAllFlowCharts(flowChartsTemp)\n                })\n                fireStore.collection('users').doc(snap.docs[0].id).onSnapshot((snap) => {\n                    if (snap.data().setNextMonth) {\n                        setNextMonthModal(true)\n                    }\n                })\n                // fireStore.collection('users').doc(snap.docs[0].id).collection('quotaGraphs').where('current', '==', true).onSnapshot((snap) => {\n                //     let formattedDates = []\n                //     setActiveMonth(snap.docs[0].data().id)\n                //     if (snap.docs[0].data().workingDays.length) {\n                //             snap.docs[0].data().workingDays.map((date) => {\n                //             formattedDates.push(new Date(date.toDate()));\n                //         })\n                //         setWorkingDays(formattedDates)\n                //     }\n                // })\n            })\n\n\n            \n        }\n    }, [currentUser])\n\n    useEffect(() => {\n        if (flowChart) {\n            flowChart.data.elements.map((item) => {\n                if (item.data && item.data.startPoint) {\n                    flowChartNavigationNext(item)\n                } \n            })\n        }\n    }, [flowChart])\n\n    let logout = () => {\n        auth.signOut();\n        setUserInfo(null)\n        setCurrentUser(null)\n        setManagementDashboard(false)\n    }\n\n    //nextTerminal, lastArr, goBack, flowChartNavigationNext\n\n    const flowChartNavigationNext = (node) => {\n\n        // if (node.type === 'otherFlowChart') {\n        //     setFlowChart(node.data.flowChart);\n        // }\n\n        let lastArrTemp = lastArr\n        lastArrTemp.push(node)\n        setLastArr(lastArrTemp)\n\n        setFlowChartNodeSelected(node.data.postId)\n\n        setNode(node);\n        let nextEdge = []\n        flowChart.data.elements.map((item) => {\n            if (item.source === node.id) {\n                if (item.label) {\n                    flowChart.data.elements.filter((e) => e.id === item.target)[0].label = item.label\n                    nextEdge.push(flowChart.data.elements.filter((e) => e.id === item.target)[0])\n                } else {\n                    console.log(flowChart.data.elements.filter((e) => e.id === item.target)[0])\n                    nextEdge.push(flowChart.data.elements.filter((e) => e.id === item.target)[0])\n                }\n            }\n            setNextTerminals(nextEdge)\n        })\n    }\n\n    const flowChartNavigationLast = (node) => {\n\n        let lastArrTemp = lastArr\n        lastArrTemp.pop()\n        setLastArr(lastArrTemp)\n\n        setFlowChartNodeSelected(node.data.postId)\n\n        setNode(node);\n        let nextEdge = []\n        flowChart.data.elements.map((item) => {\n            if (item.source === node.id) {\n                nextEdge.push(flowChart.data.elements.filter((e) => e.id === item.target)[0])\n            }\n            setNextTerminals(nextEdge)\n        })\n    }\n\n    const goBack = () => {\n        flowChartNavigationLast(lastArr[lastArr.length - 2]);\n    }\n\n    const clearFlowChart = () => {\n        console.log('clicked');\n        setFlowChart(null)\n        setNode(null)\n        setLastArr([]) \n        setNextTerminals(null)\n        setFlowChartNodeSelected(null)\n    }\n\n    return (\n        <AuthContext.Provider\n            value={{\n                \n                currentUser, \n                userInfo,\n                logout, \n                dbKey, \n\n                dbArr,\n\n                setSelectedStatGroup,\n                selectedStatGroup, \n\n                selectedFlowChart,\n                setSelectedFlowChart,\n\n                flowChart,\n                setFlowChart,\n                flowChartNodeSelected,\n                setFlowChartNodeSelected,\n                node, \n                setNode,\n                nextTerminals, \n                setNextTerminals,\n                lastArr,\n                setLastArr,\n                goBack,\n                flowChartNavigationNext,\n                clearFlowChart,\n\n                hattingMaterial,\n\n                allFlowCharts, \n\n                flowChart,\n                setFlowChart,\n\n                selectedPostInFlowChart,\n                setSelectedPostInFlowChart,\n\n                notes,\n\n                workingDays,\n                activeMonth,\n\n                managementDashboard\n\n            }}\n        class='context' >\n            {/* {node ? console.log(node) : null} */}\n            {children}\n\n            <Modal\n                visible={nextMonthModal}\n                onCancel={() => setNextMonthModal(false)}\n                footer={null}\n            >\n               <NextMonthModal setNextMonthModal={setNextMonthModal} dbKey={dbKey} />\n            </Modal>\n\n        </AuthContext.Provider>\n    );\n};"],"sourceRoot":""}