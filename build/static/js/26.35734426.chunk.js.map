{"version":3,"sources":["functions/findHeldFromAboveOLD.js","components/spinner/Spinner.js","../node_modules/@ant-design/icons-svg/es/asn/CheckOutlined.js","../node_modules/@ant-design/icons/es/icons/CheckOutlined.js","components/newHatting/HatsCollapse.js","components/newHatting/DepartmentsCollapse.js","components/newHatting/DivisionsCollapse.js","components/newHatting/HattingSequence.js","components/newHatting/Hatting.js","components/hatting/Hatting.js","components/progressBoard/ProgressBoard.js","components/progressBoard/ProgressBoardWrapper.js"],"names":["findHeldFromAbove","post","dbKey","a","dbObj","fireStore","collection","doc","get","then","snapshot","forEach","push","data","childrenArr","grandChildrenArr","greatGrandChildrenArr","greatGreatGrandChildrenArr","hasEmployee","Promise","resolve","reject","error","type","Object","entries","map","item","i","id","childOf","parrent","position","employee","hfa","stopAtPosition","child","grandChild","greatGrandChild","fullArr","concat","eliminatedPost","length","heldPost","filter","filtered","indexOf","Spinner","className","color","CheckOutlined","props","ref","React","AntdIcon","_objectSpread","icon","CheckOutlinedSvg","displayName","HatsCollapse","style","marginLeft","bordered","accordion","onChange","pannelOpen","hats","hat","m","pannelRender","DepartmentsCollapse","departments","department","l","division","DivisionsCollapse","divisions","j","panelRender","HattingSequence","useState","percentage","setPercentage","visable","setVisible","references","setReferences","useEffect","userReferences","user","userInfo","uid","refOnlyTemp","uniqueRefs","uniqueRefsThatHaveBeenRead","refTwo","name","x","referencesRead","Math","floor","from","boxShadow","percent","fontSize","paddingBottom","FolderOpenOutlined","ii","cursor","onClick","window","open","url","float","title","e","onCheckChange","checked","some","FileOutlined","nonStateHatPacks","uniqueHatPacks","Hatting","setReferencesRead","radioValue","setRadioValue","setOpenPannel","setHats","exects","setExects","setDivisions","setDepartments","console","log","allPosts","allHats","allDepartments","allDivisions","allExects","findHeldFromAboveOLD","children","obj","section","sort","b","target","completeDate","firebase","firestore","Timestamp","now","referencesReadTemp","update","Panel","Collapse","onlyHattingMaterial","hatPacks","pannelBody","orientation","hatPack","showArrow","header","radioStyle","display","height","lineHeight","fontWeight","marginTop","Group","value","onRadioChange","justify","span","div","text","exect","dept","renderByMainPost","ProgressBoard","setAllPosts","useContext","AuthContext","allPostsTemp","where","onSnapshot","docs","snap","textAlign","margin","ProgressBoardWrapper","allEmployees","setAllEmployees","currentUser","allEmployeeTemp"],"mappings":"4IAEIA,EAAiB,uCAAG,WAAOC,EAAMC,GAAb,2BAAAC,EAAA,6DAEhBC,EAAQ,GAFQ,SAIdC,IAAUC,WAAW,SAASC,IAAIL,GAAOI,WAAW,YAAYE,MAAMC,MAAK,SAACC,GAC9EN,EAAQ,GACRM,EAASC,SAAS,SAACJ,GAAD,OAASH,EAAMQ,KAAKL,EAAIM,cAN1B,cAShBC,EAAc,GACdC,EAAmB,GACnBC,EAAwB,GACxBC,EAA6B,GAE7BC,EAAc,GAdE,kBAkBb,IAAIC,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,uBAAAlB,EAAA,yDACXmB,GAAQ,EAEM,QAAdrB,EAAKsB,KAHM,gCAKLC,OAAOC,QAAQrB,GAAOsB,KAAI,SAACC,EAAMC,GAInC,OAHID,EAAK,GAAGE,IAAMF,EAAK,GAAGE,KAAO5B,EAAK6B,UAClCC,EAAUJ,EAAK,GAAGE,IAEf,QATA,uBAWLL,OAAOC,QAAQrB,GAAOsB,KAAI,SAACC,EAAMC,GAOnC,OANID,EAAK,GAAGG,UAAYC,GAAWJ,EAAK,GAAGK,SAAW/B,EAAK+B,UAEnDL,EAAK,GAAGM,WAAaN,EAAK,GAAGM,SAASC,MACtCC,EAAiBR,EAAK,GAAGK,UAG1B,QAlBA,OAoBPG,EACAX,OAAOC,QAAQrB,GAAOsB,KAAI,SAACC,EAAMC,GAI7B,OAHID,EAAK,GAAGG,UAAYC,GAAWJ,EAAK,GAAGK,SAAW/B,EAAK+B,UAAYL,EAAK,GAAGK,SAAWG,GACtFrB,EAAYF,KAAKe,EAAK,IAEnB,QAGXH,OAAOC,QAAQrB,GAAOsB,KAAI,SAACC,EAAMC,GAI7B,OAHID,EAAK,GAAGG,UAAYC,GAAWJ,EAAK,GAAGK,SAAW/B,EAAK+B,UACvDlB,EAAYF,KAAKe,EAAK,IAEnB,QAhCJ,OAqCfH,OAAOC,QAAQrB,GAAOsB,KAAI,SAACU,EAAOR,GAO9B,OANIQ,EAAM,GAAGN,UAAY7B,EAAK4B,IAAOO,EAAM,GAAGH,WAAaG,EAAM,GAAGH,SAASC,KACzEhB,EAAYN,KAAKwB,EAAM,IAEvBA,EAAM,GAAGN,UAAY7B,EAAK4B,MAAQO,EAAM,GAAGH,UAAaG,EAAM,GAAGH,UAAYG,EAAM,GAAGH,SAASC,MAC/FpB,EAAYF,KAAKwB,EAAM,IAEpB,QAGXtB,EAAYY,KAAI,SAACU,GAUb,OATAZ,OAAOC,QAAQrB,GAAOsB,KAAI,SAACC,EAAMC,GAO7B,OANID,EAAK,GAAGG,UAAYM,EAAMP,IAAOF,EAAK,GAAGM,WAAaN,EAAK,GAAGM,SAASC,KACvEhB,EAAYN,KAAKe,EAAK,IAEtBA,EAAK,GAAGG,UAAYM,EAAMP,MAAQF,EAAK,GAAGM,UAAaN,EAAK,GAAGM,UAAYN,EAAK,GAAGM,SAASC,MAC5FnB,EAAiBH,KAAKe,EAAK,IAExB,QAEJ,QAGXZ,EAAiBW,KAAI,SAACW,GAUlB,OATAb,OAAOC,QAAQrB,GAAOsB,KAAI,SAACC,EAAMC,GAO7B,OANID,EAAK,GAAGG,UAAYO,EAAWR,IAAOF,EAAK,GAAGM,WAAaN,EAAK,GAAGM,SAASC,KAC5EhB,EAAYN,KAAKe,EAAK,IAEtBA,EAAK,GAAGG,UAAYO,EAAWR,MAAQF,EAAK,GAAGM,UAAaN,EAAK,GAAGM,UAAYN,EAAK,GAAGM,SAASC,MACjGlB,EAAsBJ,KAAKe,EAAK,IAE7B,QAEJ,QAGXX,EAAsBU,KAAI,SAACY,GAUvB,OATAd,OAAOC,QAAQrB,GAAOsB,KAAI,SAACC,EAAMC,GAO7B,OANID,EAAK,GAAGG,UAAYQ,EAAgBT,IAAOF,EAAK,GAAGM,WAAaN,EAAK,GAAGM,SAASC,KACjFhB,EAAYN,KAAKe,EAAK,IAEtBA,EAAK,GAAGG,UAAYQ,EAAgBT,MAAQF,EAAK,GAAGM,UAAaN,EAAK,GAAGM,UAAYN,EAAK,GAAGM,SAASC,MACtGjB,EAA2BL,KAAKe,EAAK,IAElC,QAEJ,QAGNL,EA+BDD,EAAO,yBA7BHkB,EAAUzB,EAAY0B,OAAOvC,EAAMc,EAAkBC,EAAuBC,GACnE,GACTwB,EAAiB,GAEjBvB,GAAeA,EAAYwB,OAAS,GACpClB,OAAOC,QAAQrB,GAAOsB,KAAI,SAACC,EAAMC,GAY7B,OAXAV,EAAYQ,KAAI,SAACiB,GASb,MARsB,QAAlBA,EAASpB,KACTI,EAAK,GAAGG,UAAYa,EAASb,SAAWH,EAAK,GAAGK,SAAWW,EAASX,WACpES,EAAe7B,KAAKe,EAAK,GAAGE,IACnBU,EAAQK,QAAO,SAAAhB,GAAC,OAAIA,EAAEC,KAAOF,EAAK,GAAGE,OAGzCU,EAAQK,QAAO,SAAAhB,GAAC,OAAIA,EAAEC,KAAOF,EAAK,GAAGE,MAEvC,QAEJ,QAEPgB,EAAWN,EAAQK,QAAO,SAASjB,GACnC,OAA4C,IAArCc,EAAeK,QAAQnB,EAAKE,OAEvCT,EAAQyB,EAAU5C,IAElBmB,EAAQmB,EAAStC,IAhHV,4CAAZ,0DAlBa,2CAAH,wDA6IND,O,iCC/If,kCAce+C,IAXf,WAEI,OACI,qBAAKC,UAAU,gBAAf,SACA,cAAC,IAAD,CACAC,MAAO,a,mDCNAC,EADK,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,+LAAmM,KAAQ,QAAS,MAAS,Y,QCMpXA,EAAgB,SAAuBC,EAAOC,GAChD,OAAoBC,gBAAoBC,IAAUC,YAAcA,YAAc,GAAIJ,GAAQ,GAAI,CAC5FC,IAAKA,EACLI,KAAMC,MAIVP,EAAcQ,YAAc,gBACAL,iBAAiBH,I,2KCG9BS,MAff,SAAsBR,GAElB,OAAO,qBAAKS,MAAO,CAAEC,WAAY,OAA1B,SACH,cAAC,IAAD,CAAUC,UAAU,EAAOC,WAAW,EAAMC,SAAU,SAACpC,GAAD,OAAOuB,EAAMc,WAAWrC,IAA9E,SACKuB,EAAMe,KAAKxC,KAAI,SAACyC,EAAKC,GAElB,OAAID,EAAIrC,UAAYqB,EAAMpB,QAAQF,GACvBsB,EAAMkB,aAAaF,GAChB,aCefG,MArBf,SAA6BnB,GAEzB,OAAO,qBAAKS,MAAO,CAAEC,WAAY,OAA1B,SACH,cAAC,IAAD,CAAUC,UAAU,EAAOC,WAAW,EAAMC,SAAU,SAACpC,GAAD,OAAOuB,EAAMc,WAAWrC,IAA9E,SAEKuB,EAAMoB,YAAY7C,KAAI,SAAC8C,EAAYC,GAChC,OAAID,EAAW1C,UAAYqB,EAAMpB,QAAQF,GAE9B,CAACsB,EAAMkB,aAAaG,GAE3BrB,EAAMe,KACF,cAAC,EAAD,CAAcA,KAAMf,EAAMe,KAAMQ,SAAUvB,EAAMuB,SAAU3C,QAASyC,EAAYH,aAAclB,EAAMkB,aAAcJ,WAAYd,EAAMc,aACjI,MAEI,aCefU,MA5Bf,SAA2BxB,GAEvB,OAAO,qBAAKS,MAAO,CAAEC,WAAY,OAA1B,SACH,cAAC,IAAD,CAAUC,UAAU,EAAOC,WAAW,EAAMC,SAAU,SAACpC,GAAD,OAAOuB,EAAMc,WAAWrC,IAA9E,SACKuB,EAAMyB,UAAUlD,KAAI,SAACgD,EAAUG,GAE5B,OAAIH,EAAS5C,UAAYqB,EAAMpB,QAAQF,GAE5B,CAACsB,EAAMkB,aAAaK,GAE3BvB,EAAMoB,YACF,cAAC,EAAD,CAAqBA,YAAapB,EAAMoB,YAAaxC,QAAS2C,EAAUR,KAAMf,EAAMe,KAAMG,aAAclB,EAAMkB,aAAcJ,WAAYd,EAAMc,aAC5I,KAENd,EAAMe,KACF,cAAC,EAAD,CAAcA,KAAMf,EAAMe,KAAMnC,QAAS2C,EAAUL,aAAclB,EAAMkB,aAAcJ,WAAYd,EAAMc,aACrG,MAEEd,EAEE,KADHA,EAAM2B,YAAYJ,W,qDCiE9BK,MAlFf,SAAyB5B,GAErB,MAAoC6B,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEA,EAAoCJ,mBAAS,MAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAuCA,OArCAC,oBAAS,sBAAE,kCAAApF,EAAA,6DAEHqF,EAAiB,GAFd,SAIDrC,EAAMkC,WAAW3D,KAAI,SAACC,GACpBA,EAAK8D,OAAStC,EAAMuC,SAASC,KAC7BH,EAAe5E,KAAKe,EAAKA,KAAKA,SAN/B,cASP2D,EAAcE,GAEVI,EAAc,GACdC,EAAa,GAEbC,EAA6B,GAd1B,SAgBDN,EAAe9D,KAAI,SAAC0B,GAClBA,EAAIiC,WACJjC,EAAIiC,WAAW3D,KAAI,SAACqE,GAChBH,EAAYhF,KAAKmF,EAAOC,SAG5BJ,EAAYhF,KAAKwC,EAAI4C,SAtBtB,OA0BPJ,EAAYlE,KAAI,SAAAuE,GAAC,OAAIJ,EAAWjD,QAAO,SAAAzC,GAAC,OAAIA,GAAK8F,KAAGvD,OAAS,EAAI,KAAOmD,EAAWjF,KAAKqF,MAExFJ,EAAWnE,KAAI,SAAAuE,GAAC,OAAI9C,EAAM+C,eAAetD,QAAO,SAAAzC,GAAC,OAAIA,EAAE6F,MAAQC,KAAGvD,OAAS,EAAIoD,EAA2BlF,KAAKqF,GAAK,QAEpHf,EAAciB,KAAKC,MAAON,EAA2BpD,OAASmD,EAAWnD,OAAU,MA9B5E,4CAgCR,CAACS,IAKI,gCAEJ,qBAAKH,UAAU,kBAAkBY,MAAuB,aAAfT,EAAMkD,KAAsB,CAAEC,UAAW,4BAA+B,KAAjH,SAAyH,cAAC,IAAD,CAAUC,QAAStB,MAE1H,kBAAf9B,EAAMkD,MAA4BlB,GAA2B,kBAAfhC,EAAMkD,KACvD,sBAAKrD,UAAU,kBAAmBY,MAAuB,aAAfT,EAAMkD,KAAsB,CAAEC,UAAW,4BAA+B,KAAlH,UACI,uBACEjB,EAAaA,EAAW3D,KAAI,SAACC,EAAMC,GACjC,OAAOD,EAAK0D,WAAa,sBAAKrC,UAAU,kBAAf,UAAkC,sBAAKY,MAAO,CAAE4C,SAAU,OAAQC,cAAe,QAA/C,UACvD,cAACC,EAAA,EAAD,IADuD,IAChC,4BAAI/E,EAAKqE,UADX,IAEjBrE,EAAK0D,WAAW3D,KAAI,SAAC0B,EAAKuD,GAC9B,OAAO,qBAAI/C,MAAO,CAAEC,WAAY,OAAzB,UAA2C,sBAAMD,MAAO,CAAEgD,OAAQ,WAAaC,QAAS,kBAAMC,OAAOC,KAAK3D,EAAI4D,IAAK,WAAxE,SAAqF5D,EAAI4C,OACvI,sBAAMpC,MAAO,CAAEqD,MAAO,SAAtB,SACI,cAAC,IAAD,CAASC,MAAM,sGAAf,SACI,cAAC,IAAD,CAAUlD,SAAU,SAACmD,GAAD,OAAOhE,EAAMiE,cAAcD,EAAG/D,IAAMiE,QAASlE,EAAM+C,eAAeoB,MAAK,SAAAH,GAAC,OAAIA,EAAEnB,OAAS5C,EAAI4C,gBAH7EW,SAUlD,qBAAI/C,MAAO,CAAEC,WAAY,OAAzB,UAA0C,cAAC0D,EAAA,EAAD,IAA1C,IAA2D,sBAAM3D,MAAO,CAAEgD,OAAQ,UAAWJ,SAAU,OAAQC,cAAe,QAAUI,QAAS,kBAAMC,OAAOC,KAAKpF,EAAKqF,IAAK,WAAlH,SAA6H,4BAAIrF,EAAKqE,SAE7L,sBAAMpC,MAAO,CAAEqD,MAAO,SAAtB,SACI,cAAC,IAAD,CAASC,MAAM,sGAAf,SACI,cAAC,IAAD,CAAUlD,SAAU,SAACmD,GAAD,OAAOhE,EAAMiE,cAAcD,EAAGxF,IAAO0F,QAASlE,EAAM+C,eAAeoB,MAAK,SAAAH,GAAC,OAAIA,EAAEnB,OAASrE,EAAKqE,gBAJtFpE,MAStC,KACY,kBAAfuB,EAAMkD,KAA2B,qBAAKQ,QAAS,kBAAMzB,GAAW,IAA/B,kBAAoD,QAEzF,qBAAKyB,QAAS,kBAAMzB,GAAW,IAA/B,sBCtENoC,EAAmB,GACnBC,EAAiB,GAkUNC,IAhUf,SAAiBvE,GAEb,MAA4C6B,mBAAS,IAArD,mBAAOkB,EAAP,KAAuByB,EAAvB,KACA,EAAoC3C,mBAAS,IAA7C,mBAEA,GAFA,UAEoCA,mBAAS,WAA7C,mBAAO4C,EAAP,KAAmBC,EAAnB,KAEA,EAAoC7C,mBAAS,MAA7C,mBAAmB8C,GAAnB,WACA,EAAwB9C,mBAAS,MAAjC,mBAAOd,EAAP,KAAa6D,EAAb,KACA,EAA4B/C,mBAAS,MAArC,mBAAOgD,EAAP,KAAeC,EAAf,KACA,EAAkCjD,mBAAS,MAA3C,mBAAOJ,EAAP,KAAkBsD,EAAlB,KACA,EAAsClD,mBAAS,MAA/C,mBAAOT,EAAP,KAAoB4D,EAApB,KAEA,EAAsCnD,mBAAS,MAA/C,mBACA,IADA,UAC8BA,mBAAS,KAAvC,iCAEAO,oBAAS,sBAAC,kCAAApF,EAAA,sDACNiI,QAAQC,IAAIlF,EAAMmF,UAClBjI,IAAUC,WAAW,SAASC,IAAI4C,EAAMjD,OAAOI,WAAW,aAAaC,IAAI4C,EAAMuC,SAASC,KAAKnF,MAAMC,MAAK,SAACC,GACvGiH,EAAkBjH,EAASG,OAAOqF,mBAGlCqC,EAAU,GACVC,EAAiB,GACjBC,EAAe,GACfC,EAAY,GAEhBvF,EAAMmF,SAAS3H,SAAQ,SAACV,GAEpB0I,YAAqB1I,EAAMkD,EAAMjD,OAAOO,MAAK,SAACmI,GAC1CA,EAASlH,KAAI,SAACmH,GAUV,MATiB,QAAbA,EAAItH,MAAmBsH,EAAIC,QAEN,UAAdD,EAAItH,KACXiH,EAAe5H,KAAKiI,GACC,SAAdA,EAAItH,KACXkH,EAAa7H,KAAKiI,GACG,UAAdA,EAAItH,MACXmH,EAAU9H,KAAKiI,GANfN,EAAQ3H,KAAKiI,GAQV,WAEZpI,MAAK,WACJgI,EAAaM,MAAK,SAAC5I,EAAG6I,GAAQ,OAAO7I,EAAE6B,SAAWgH,EAAEhH,YACpD0G,EAAUK,MAAK,SAAC5I,EAAG6I,GAAQ,OAAO7I,EAAE6B,SAAWgH,EAAEhH,YACjDuG,EAAQQ,MAAK,SAAC5I,EAAG6I,GAAQ,OAAO7I,EAAE6B,SAAWgH,EAAEhH,YAC/C+F,EAAQQ,GACRJ,EAAeK,GACfN,EAAaO,GACbR,EAAUS,MACXjI,MAAK,WAKJoH,EAAc,mBAvChB,2CA6CP,CAAC1E,IAEJ,IAAIiE,GAAgB,SAACD,EAAGxF,GACpB,GAAIwF,EAAE8B,OAAO5B,QAAS,CAClB1F,EAAKuH,aAAe,IAAIC,IAASC,UAAUC,UAAUC,IACrD,IAAIC,EAAqBrD,EAAe1D,OAAOb,GAC/CgG,EAAkB4B,GAClBlJ,IAAUC,WAAW,SAASC,IAAI4C,EAAMjD,OAAOI,WAAW,aAAaC,IAAI4C,EAAMuC,SAASC,KAAK6D,OAAO,CAClGtD,eAAgBqD,QAEjB,CACH,IAAIA,EAAqBrD,EAAetD,QAAO,SAAAuE,GAAC,OAAIA,EAAEnB,OAASrE,EAAKqE,QACpE2B,EAAkB4B,GAClBlJ,IAAUC,WAAW,SAASC,IAAI4C,EAAMjD,OAAOI,WAAW,aAAaC,IAAI4C,EAAMuC,SAASC,KAAK6D,OAAO,CAClGtD,eAAgBqD,MAKtBE,GAAQC,IAASD,MAEnBE,GAAsB,SAAChI,GAEnBA,EAAKiI,SAASlH,QACdf,EAAKiI,SAASlI,KAAI,SAACC,IACf6F,EAAmBA,EAAiBhF,OAAO,CAAEiD,KAAMtC,EAAMuC,SAASC,IAAKhE,KAAMA,KACxDe,QACjB8E,EAAiB9F,KAAI,SAAAuE,GAAC,OAAIwB,EAAe7E,QAAO,SAAAzC,GAAC,OAAIA,EAAEwB,KAAKA,KAAKqE,MAAQC,EAAEtE,KAAKqE,MAAQ7F,EAAEsF,MAAQQ,EAAER,QAAM/C,OAAS,EAAI,KAAO+E,EAAe7G,KAAK,CAACe,KAAMsE,EAAGR,KAAMtC,EAAMuC,SAASC,YAMzLhE,EAAK0D,WAAW3C,QAChBf,EAAK0D,WAAW3D,KAAI,SAACC,IACjB6F,EAAmBA,EAAiBhF,OAAO,CAAEiD,KAAMtC,EAAMuC,SAASC,IAAKhE,KAAMA,KACxDe,QACjB8E,EAAiB9F,KAAI,SAAAuE,GAAC,OAAIwB,EAAe7E,QAAO,SAAAzC,GAAC,OAAIA,EAAEwB,KAAKA,KAAKqE,MAAQC,EAAEtE,KAAKqE,MAAQ7F,EAAEsF,MAAQQ,EAAER,QAAM/C,OAAS,EAAI,KAAO+E,EAAe7G,KAAK,CAACe,KAAMsE,EAAGR,KAAMtC,EAAMuC,SAASC,aAS7LkE,GAAa,SAAClI,GACV,OAAO,gCACP,cAAC,IAAD,CAASmI,YAAY,OAArB,uBACEnI,EAAKiI,SAASlI,KAAI,SAACqI,EAASnI,GAC1B,OAAO,gCACH,qBAAagC,MAAO,CAAEC,WAAY,OAAlC,SAA2C,4BAAIkG,EAAQ/D,QAA7CpE,GACTmI,EAAQ1E,WAAW3D,KAAI,SAAC0B,EAAKxB,GAC1B,OAAO,8BACH,sBAAagC,MAAO,CAAEgD,OAAQ,UAAW/C,WAAY,OAAUgD,QAAS,kBAAMC,OAAOC,KAAK3D,EAAI4D,IAAK,WAAnG,UAA8G,4BAAI5D,EAAI4C,OACtH,sBAAMpC,MAAO,CAAEqD,MAAO,SAAtB,SACI,cAAC,IAAD,CAASC,MAAM,sGAAf,SACI,cAAC,IAAD,CAAUlD,SAAU,SAACmD,GAAD,OAAOC,GAAcD,EAAG/D,IAAMiE,QAASnB,EAAeoB,MAAK,SAAAH,GAAC,OAAIA,EAAEnB,OAAS5C,EAAI4C,gBAHjGpE,cAa1B,uBACF,cAAC,IAAD,CAASkI,YAAY,OAArB,mCACGnI,EAAK0D,WAAW3D,KAAI,SAAC0B,EAAKuD,GACvB,OAAO,qBAAKE,QAAS,kBAAMuB,QAAQC,IAAIjF,IAAhC,SACH,sBAAcQ,MAAO,CAAEC,WAAY,OAAnC,UAA4C,mBAAGD,MAAO,CAAEgD,OAAQ,WAAaC,QAAS,kBAAMC,OAAOC,KAAK3D,EAAI4D,IAAK,WAArE,SAAkF5D,EAAI4C,OAClI,sBAAMpC,MAAO,CAAEqD,MAAO,SAAtB,SACI,cAAC,IAAD,CAASC,MAAM,sGAAf,SACI,cAAC,IAAD,CAAUlD,SAAU,SAACmD,GAAD,OAAOC,GAAcD,EAAG/D,IAAMiE,QAASnB,EAAeoB,MAAK,SAAAH,GAAC,OAAIA,EAAEnB,OAAS5C,EAAI4C,gBAHjGW,YAatBtC,GAAe,SAAC1C,EAAMC,GACtB,GAAKD,EAAKiI,UAAYjI,EAAKiI,SAASlH,QAAYf,EAAK0D,YAAc1D,EAAK0D,WAAW3C,OAC/E,OAAO,eAAC+G,GAAD,CAAOO,WAAW,EAAOC,OAAQ,mBAAGrG,MAAO,CAAE4C,SAAU,QAAtB,SAAiC7E,EAAK1B,OAAvE,UACD0J,GAAoBhI,GACpBkI,GAAWlI,KAF6EC,IAMlGqC,GAAa,SAACrC,GACdkG,EAAclG,IA6HZsI,GAAa,CACfC,QAAS,QACTC,OAAQ,OACRC,WAAY,OACZC,WAAY,OACZrH,MAAO,WAGX,OACI,sBAAKW,MAAO,CAAE2G,UAAW,OAAzB,UAEoB,aAAfpH,EAAMkD,MAAsC,kBAAflD,EAAMkD,KAChC,KACA,sBAAKzC,MAAO,CAAEC,WAAY,OAA1B,UACI,eAAC,IAAM2G,MAAP,CAAaxG,SAAU,SAACmD,GAAD,OAlBnB,SAACA,GAEjBU,EAAcV,EAAE8B,OAAOwB,OAgBmBC,CAAcvD,IAAIsD,MAAO7C,EAAvD,UACI,cAAC,IAAD,CAAOhE,MAAOsG,GAAYO,MAAO,YAAjC,iCACA,cAAC,IAAD,CAAO7G,MAAOsG,GAAYO,MAAO,SAAjC,gCAEJ,0BAIQ,WAAf7C,EACG,cAAC,IAAD,CAAK+C,QAAQ,SAAb,SACI,cAAC,IAAD,CAAKC,KAAM,GAAI5H,UAAU,kBAAzB,SAA4CG,EAAMmF,SAElDnF,EAAMmF,SAAS5G,KAAI,SAACzB,GAChB,OArJG,SAACA,GAEhB,OAAQA,EAAKsB,MAET,IAAK,QAwDL,IAAK,OAED,MAAO,CAEH,qBAAqBqC,MAAO,CAAEC,WAAY,OAA1C,SACI,cAAC,IAAD,CAAUC,UAAU,EAAOC,WAAW,EAAMC,SAAU,SAACpC,GAAD,OAAOkG,EAAclG,IAA3E,SACKgD,EAAYA,EAAUlD,KAAI,SAACmJ,EAAKjJ,GAC7B,MAAO,CAACyC,GAAawG,EAAKjJ,EAAI,IAC9B2C,EACI,cAAC,EAAD,CAAqBK,UAAWA,EAAW7C,QAAS8I,EAAKtG,YAAaA,EAAaL,KAAMA,EAAMjE,KAAMA,EAAMoE,aAAcA,GAAcJ,WAAYA,KACjJ,KACNC,EACI,cAAC,EAAD,CAAcU,UAAWA,EAAW7C,QAAS8I,EAAKtG,YAAaA,EAAaL,KAAMA,EAAMjE,KAAMA,EAAMoE,aAAcA,GAAcJ,WAAYA,KAC1I,SAGN,cAAClB,EAAA,EAAD,CAAS+H,KAAM,yBAZjB7K,EAAKA,OAxCvB,IAAK,KAED,MAAO,CACH,cAAC,IAAD,CAAwB6D,UAAU,EAAOC,WAAW,EAAMC,SAAU,SAACpC,GAAD,OAAOkG,EAAclG,IAAzF,SACKyC,GAAapE,GAAO,IADVA,EAAK4B,IAIpBmG,GAAUA,EAAOtF,OAAS,EACtB,qBAAqBkB,MAAO,CAAEC,WAAY,OAA1C,SACI,cAAC,IAAD,CAAUC,UAAU,EAAOC,WAAW,EAAMC,SAAU,SAACpC,GAAD,OAAOkG,EAAclG,IAA3E,SACKoG,EAAOtG,KAAI,SAACqJ,EAAOnJ,GAChB,MAAO,CAACyC,GAAa0G,EAAOnJ,EAAI,IAChCgD,EACI,cAAC,EAAD,CAAmBA,UAAWA,EAAW7C,QAASgJ,EAAOxG,YAAaA,EAAaL,KAAMA,EAAMjE,KAAMA,EAAMoE,aAAcA,GAAcJ,WAAYA,KACjJ,YANRhE,EAAKA,MASS,MAGpC,IAAK,QAED,MAAO,CAEH,qBAAqB2D,MAAO,CAAEC,WAAY,OAA1C,SACI,cAAC,IAAD,CAAUC,UAAU,EAAOC,WAAW,EAAMC,SAAU,SAACpC,GAAD,OAAOkG,EAAclG,IAA3E,SACKoG,EAASA,EAAOtG,KAAI,SAACqJ,EAAOnJ,GACzB,MAAO,CAACyC,GAAa0G,EAAOnJ,EAAI,IAChCgD,EACI,cAAC,EAAD,CAAmBA,UAAWA,EAAW7C,QAASgJ,EAAOxG,YAAaA,EAAaL,KAAMA,EAAMjE,KAAMA,EAAMoE,aAAcA,GAAcJ,WAAYA,KACjJ,SAEN,cAAClB,EAAA,EAAD,CAAS+H,KAAM,0BARjB7K,EAAKA,OAgCvB,IAAK,QAED,MAAO,CAEH,qBAAqB2D,MAAO,CAAEC,WAAY,OAA1C,SACI,cAAC,IAAD,CAAUC,UAAU,EAAOC,WAAW,EAAMC,SAAU,SAACpC,GAAD,OAAOkG,EAAclG,IAA3E,SACK2C,EAAcA,EAAY7C,KAAI,SAACsJ,EAAMpJ,GAClC,MAAO,CAACyC,GAAa2G,EAAMpJ,EAAI,IAC/BsC,EACI,cAAC,EAAD,CAAcU,UAAWA,EAAW7C,QAASiJ,EAAMzG,YAAaA,EAAaL,KAAMA,EAAMjE,KAAMA,EAAMoE,aAAcA,GAAcJ,WAAYA,KAC3I,SAEN,cAAClB,EAAA,EAAD,CAAS+H,KAAM,2BARjB7K,EAAKA,OAYvB,IAAK,MAED,OAAO,qBAAqB2D,MAAO,CAAEC,WAAY,OAA1C,SACH,cAAC,IAAD,CAAUC,UAAU,EAAOC,WAAW,EAAMC,SAAU,SAACpC,GAAD,OAAOkG,EAAclG,IAA3E,SAEKsC,EAAOA,EAAKxC,KAAI,SAACyC,EAAKvC,GACnB,GAAkB,QAAd3B,EAAKsB,MAAkB4C,EAAIrC,UAAY7B,EAAK6B,QAC5C,OAAOuC,GAAaF,EAAKvC,EAAI,OAGnC,cAACmB,EAAA,EAAD,CAAS+H,KAAM,2BARR7K,EAAKA,MAc1B,QACI,OAAO,oDAoCIgL,CAAiBhL,MAEtB,wDAGV,cAAC,IAAD,CAAK0K,QAAQ,SAAb,SACI,cAAC,IAAD,CAAKC,KAAsB,aAAfzH,EAAMkD,KAAsB,GAAK,GAA7C,SAAkD,cAAC,EAAD,CAAiBhB,WAAYoC,EAAgB/B,SAAUvC,EAAMuC,SAAUQ,eAAgBA,EAAgBkB,cAAeA,GAAef,KAAMlD,EAAMkD,gB,6MCfxMqB,I,SCzQAwD,MA5Cf,SAAuB/H,GAEnB,MAA4C6B,mBAAS,MAArD,mBACA,GADA,UACgCA,mBAAS,OAAzC,mBAAOsD,EAAP,KAAiB6C,EAAjB,KAEQjL,EAAUkL,qBAAWC,KAArBnL,MAsBR,OApBAqF,oBAAS,sBAAC,4BAAApF,EAAA,0DAEFD,EAFE,uBAIEoL,EAAe,GAJjB,SAMIjL,IAAUC,WAAW,SAASC,IAAIL,GAAOI,WAAW,YAAYiL,MAAM,eAAgB,KAAMpI,EAAMlB,SAAS0D,KAAK4F,MAAM,eAAgB,MAAM,GAAOC,YAAW,SAAC9K,GACjKA,EAAS+K,KAAK9K,SAAQ,SAACJ,EAAKqB,GACxB0J,EAAa1K,KAAKL,EAAIM,WAE1BR,IAAUC,WAAW,SAASC,IAAIL,GAAOI,WAAW,YAAYiL,MAAM,mBAAoB,iBAAkB,CAACvF,KAAM7C,EAAMlB,SAAS+D,KAAML,IAAKxC,EAAMlB,SAAS0D,MAAMnF,MAAMC,MAAK,SAACiL,GAC1KA,EAAKD,KAAK9K,SAAQ,SAACJ,EAAKqB,GACpB0J,EAAa1K,KAAKL,EAAIM,WAE1BsK,EAAYG,SAdlB,2CAkBP,CAACpL,EAAOiD,IAGP,sBAAKH,UAAU,gBAAf,UAII,qBAAKY,MAAO,CAAE+H,UAAW,UAAzB,SAAqC,8BAAIxI,EAAMlB,SAAS+D,KAAnB,UACnCsC,EAAW,gCAEL,cAAC,IAAD,CAASA,SAAUA,EAAUpI,MAAOA,EAAOwF,SAAUvC,EAAMlB,SAAUoE,KAAK,kBACtE,0BAEV,qBAAKzC,MAAO,CAAEgI,OAAQ,MAAOD,UAAW,UAAxC,SAAoD,qBAAI/H,MAAO,CAAEX,MAAO,WAApB,sCAA2DE,EAAMlB,SAAS+D,cCL7H6F,UAhCf,SAA8B1I,GAE1B,MAAwC6B,mBAAS,MAAjD,mBAAO8G,EAAP,KAAqBC,EAArB,KAEA,EAAyCX,qBAAWC,KAA5CnL,EAAR,EAAQA,MAgBR,OAhBA,EAAewF,SAAf,EAAyBsG,YAEzBzG,qBAAU,WACN,GAAIrF,EAAO,CACP,IAAI+L,EAAkB,GACtB5L,IAAUC,WAAW,SAASC,IAAIL,GAAOI,WAAW,aAAaE,MAAMC,MAAK,SAACC,GACzEA,EAASC,SAAQ,SAACsB,GACa,UAAvBA,EAASpB,OAAOgB,IAChBoK,EAAgBrL,KAAKqB,EAASpB,WAGtCkL,EAAgBE,SAGzB,CAAC/L,IAGA,qBAAK8C,UAAU,uBAAuBY,MAAO,CAAEX,MAAO,UAAWsH,UAAW,OAA5E,SACKuB,EAAeA,EAAapK,KAAI,SAACO,GAC9B,OAAO,8BACH,cAAC,EAAD,CAAeA,SAAUA,SAG5B","file":"static/js/26.35734426.chunk.js","sourcesContent":["import { fireStore } from '../firebase';\n\nlet findHeldFromAbove = async (post, dbKey) => {\n\n    let dbObj = []\n\n    await fireStore.collection(\"users\").doc(dbKey).collection('orgBoard').get().then((snapshot) => {\n        dbObj = []\n        snapshot.forEach( (doc) => dbObj.push(doc.data()) )\n    });\n\n    let childrenArr = []\n    let grandChildrenArr = []\n    let greatGrandChildrenArr = []\n    let greatGreatGrandChildrenArr = []\n\n    let hasEmployee = [];\n\n    let stopAtPosition;\n\n    return new Promise(async (resolve, reject) => {\n        let error = false\n        \n        if (post.type === 'hat') {\n            let parrent;\n            await Object.entries(dbObj).map((item, i) => {\n                if (item[1].id && item[1].id === post.childOf) {\n                    parrent = item[1].id\n                }\n                return null;\n            })\n            await Object.entries(dbObj).map((item, i) => {\n                if (item[1].childOf === parrent && item[1].position > post.position) {\n\n                    if (item[1].employee && !item[1].employee.hfa) {\n                        stopAtPosition = item[1].position\n                    } \n                }\n                return null\n            })\n            if (stopAtPosition) {\n                Object.entries(dbObj).map((item, i) => {\n                    if (item[1].childOf === parrent && item[1].position > post.position && item[1].position < stopAtPosition ) {\n                        childrenArr.push(item[1])\n                    }\n                    return null\n                })\n            } else {\n                Object.entries(dbObj).map((item, i) => {\n                    if (item[1].childOf === parrent && item[1].position > post.position) {\n                        childrenArr.push(item[1])\n                    }\n                    return null\n                })\n            }\n        }\n\n        Object.entries(dbObj).map((child, i) => {\n            if (child[1].childOf === post.id && (child[1].employee && !child[1].employee.hfa)) {\n                hasEmployee.push(child[1])\n            }\n            if (child[1].childOf === post.id && (!child[1].employee || (child[1].employee && child[1].employee.hfa) )) {\n                childrenArr.push(child[1])\n            }\n            return null;\n        })\n\n        childrenArr.map((child) => {\n            Object.entries(dbObj).map((item, i) => {\n                if (item[1].childOf === child.id && (item[1].employee && !item[1].employee.hfa)) {\n                    hasEmployee.push(item[1])\n                }\n                if (item[1].childOf === child.id && (!item[1].employee || (item[1].employee && item[1].employee.hfa) )) {\n                    grandChildrenArr.push(item[1])\n                }\n                return null;\n            })\n            return null;\n        })\n\n        grandChildrenArr.map((grandChild) => {\n            Object.entries(dbObj).map((item, i) => {\n                if (item[1].childOf === grandChild.id && (item[1].employee && !item[1].employee.hfa)) {\n                    hasEmployee.push(item[1])\n                }\n                if (item[1].childOf === grandChild.id && (!item[1].employee || (item[1].employee && item[1].employee.hfa))) {\n                    greatGrandChildrenArr.push(item[1])\n                }\n                return null;\n            })\n            return null;\n        })\n\n        greatGrandChildrenArr.map((greatGrandChild) => {\n            Object.entries(dbObj).map((item, i) => {\n                if (item[1].childOf === greatGrandChild.id && (item[1].employee && !item[1].employee.hfa)) {\n                    hasEmployee.push(item[1])\n                }\n                if (item[1].childOf === greatGrandChild.id && (!item[1].employee || (item[1].employee && item[1].employee.hfa))) {\n                    greatGreatGrandChildrenArr.push(item[1])\n                }\n                return null;\n            })\n            return null;\n        })\n\n        if (!error) {\n            \n            let fullArr = childrenArr.concat(post, grandChildrenArr, greatGrandChildrenArr, greatGreatGrandChildrenArr)\n            let newArr = []\n            let eliminatedPost = []\n\n            if (hasEmployee && hasEmployee.length > 0) {\n                Object.entries(dbObj).map((item, i) => {\n                    hasEmployee.map((heldPost) => {\n                        if (heldPost.type === 'hat') {\n                        if (item[1].childOf === heldPost.childOf && item[1].position > heldPost.position) {\n                            eliminatedPost.push(item[1].id)\n                            newArr = fullArr.filter(i => i.id !== item[1].id);\n                        }\n                    } else {\n                        newArr = fullArr.filter(i => i.id !== item[1].id);\n                    }\n                        return null;\n                    })\n                    return null;\n                })\n                let filtered = fullArr.filter(function(item) {\n                    return eliminatedPost.indexOf(item.id) === -1;\n                });\n                resolve(filtered, post)\n            } else {\n                resolve(fullArr, post)\n            }\n\n\n        } else {\n            reject('something went wrong')\n        }\n    })\n\n}\n\nexport default findHeldFromAbove;","import React from 'react';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\nfunction Spinner() {\n\n    return (\n        <div className='spinnerLoader'>\n        <BeatLoader\n        color={'gray'}\n      />\n      </div>\n    )\n}\n\nexport default Spinner;","// This icon file is generated automatically.\nvar CheckOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z\" } }] }, \"name\": \"check\", \"theme\": \"outlined\" };\nexport default CheckOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\n\nCheckOutlined.displayName = 'CheckOutlined';\nexport default /*#__PURE__*/React.forwardRef(CheckOutlined);","import React from 'react';\nimport { Collapse } from 'antd';\n\nfunction HatsCollapse(props) {\n\n    return <div style={{ marginLeft: '2em' }}>\n        <Collapse bordered={false} accordion={true} onChange={(i) => props.pannelOpen(i)}>\n            {props.hats.map((hat, m) => {\n\n                if (hat.childOf === props.parrent.id) {\n                    return props.pannelRender(hat)\n                } else return null;\n\n            })}\n        </Collapse>\n    </div>\n}\n\nexport default HatsCollapse;","import React from 'react';\nimport { Collapse } from 'antd';\n\nimport HatsCollapse from './HatsCollapse';\n\nfunction DepartmentsCollapse(props) {\n\n    return <div style={{ marginLeft: '2em' }}>\n        <Collapse bordered={false} accordion={true} onChange={(i) => props.pannelOpen(i)}>\n\n            {props.departments.map((department, l) => {\n                if (department.childOf === props.parrent.id) {\n\n                    return [props.pannelRender(department),\n\n                    props.hats ?\n                        <HatsCollapse hats={props.hats} division={props.division} parrent={department} pannelRender={props.pannelRender} pannelOpen={props.pannelOpen} />\n                        : null]\n\n                } else return null;\n\n            })}\n        </Collapse>\n    </div>\n}\n\nexport default DepartmentsCollapse;","import React from 'react';\nimport { Collapse } from 'antd';\n\nimport HatsCollapse from './HatsCollapse';\nimport DepartmentsCollapse from './DepartmentsCollapse';\n\nfunction DivisionsCollapse(props) {\n\n    return <div style={{ marginLeft: '2em' }}>\n        <Collapse bordered={false} accordion={true} onChange={(i) => props.pannelOpen(i)}>\n            {props.divisions.map((division, j) => {\n\n                if (division.childOf === props.parrent.id) {\n\n                    return [props.pannelRender(division),\n\n                    props.departments ?\n                        <DepartmentsCollapse departments={props.departments} parrent={division} hats={props.hats} pannelRender={props.pannelRender} pannelOpen={props.pannelOpen} />\n                        : null,\n\n                    props.hats ?\n                        <HatsCollapse hats={props.hats} parrent={division} pannelRender={props.pannelRender} pannelOpen={props.pannelOpen} />\n                        : null]\n\n                } else if (!props) {\n                    return props.panelRender(division)\n                } else return null;\n            })}\n\n</Collapse>\n\n    </div>\n}\n\nexport default DivisionsCollapse;","import React, { useState, useEffect } from 'react';\nimport { Button, Modal, Row, Col, Checkbox, Tooltip, Progress } from 'antd';\nimport dateFormat from 'dateformat';\nimport {\n    FolderOpenOutlined,\n    FileOutlined\n  } from '@ant-design/icons';\n\nfunction HattingSequence(props) {\n\n    const [percentage, setPercentage] = useState(0)\n    const [visable, setVisible] = useState(false)\n    \n    const [references, setReferences] = useState(null)\n\n    useEffect( async () => {\n        //console.log(props.references);\n        let userReferences = []\n     \n        await props.references.map((item) => {\n            if (item.user === props.userInfo.uid) {\n                userReferences.push(item.item.item)\n            }\n        })\n        setReferences(userReferences);\n\n        let refOnlyTemp = []\n        let uniqueRefs = []\n\n        let uniqueRefsThatHaveBeenRead = []\n\n        await userReferences.map((ref) => {\n            if (ref.references) {\n                ref.references.map((refTwo) => {\n                    refOnlyTemp.push(refTwo.name);\n                })\n            } else {\n                refOnlyTemp.push(ref.name);\n            }\n        })\n\n        refOnlyTemp.map(x => uniqueRefs.filter(a => a == x).length > 0 ? null : uniqueRefs.push(x))\n\n        uniqueRefs.map(x => props.referencesRead.filter(a => a.name == x).length > 0 ? uniqueRefsThatHaveBeenRead.push(x) : null )\n\n        setPercentage(Math.floor((uniqueRefsThatHaveBeenRead.length / uniqueRefs.length) * 100 ));\n       \n    }, [props])\n\n\n\n\n    return (<div>   \n     \n        <div className='hattingSequence' style={ props.from === 'homePage' ? { boxShadow: '0px 0px 15px 0px #888888' } : null } ><Progress percent={percentage} /></div> \n\n        { (props.from === 'progressBoard' && visable) || props.from !== 'progressBoard'? \n        <div className='hattingSequence'  style={ props.from === 'homePage' ? { boxShadow: '0px 0px 15px 0px #888888' } : null }>\n            <br />\n            { references ? references.map((item, i) => {\n                return item.references ? <div className='hatPackSequence' ><div style={{ fontSize: '115%', paddingBottom: '15px' }}>\n                    <FolderOpenOutlined /> <b>{item.name}</b>\n                </div> {item.references.map((ref, ii) => {\n                    return <li style={{ marginLeft: '2em' }} key={ii}><span style={{ cursor: 'pointer' }} onClick={() => window.open(ref.url, \"_blank\")} >{ref.name}</span>\n                        <span style={{ float: 'right' }}>\n                            <Tooltip title=\"By checking this box you are attesting that you have read, understand, and can apply this reference\">\n                                <Checkbox onChange={(e) => props.onCheckChange(e, ref)} checked={props.referencesRead.some(e => e.name === ref.name)}></Checkbox>\n                            </Tooltip>\n                        </span>\n                        {/* { props.referencesRead.some(e => e.name === ref.name) ? <span style={{ float: 'right', marginRight: '2em' }}>{ console.log(props.referencesRead) }</span> : null } */}\n                    </li>\n                })}</div>\n                :\n                <li style={{ marginLeft: '1em' }} key={i}><FileOutlined /> <span style={{ cursor: 'pointer', fontSize: '115%', paddingBottom: '15px' }} onClick={() => window.open(item.url, \"_blank\")}><b>{item.name}</b></span>\n                \n                    <span style={{ float: 'right' }}>\n                        <Tooltip title=\"By checking this box you are attesting that you have read, understand, and can apply this reference\">\n                            <Checkbox onChange={(e) => props.onCheckChange(e, item)} checked={props.referencesRead.some(e => e.name === item.name)}></Checkbox>\n                        </Tooltip>\n                    </span>\n                    {/* { props.referencesRead.some(e => e.name === item.name) ? <span style={{ float: 'right', marginRight: '2em'  }}></span> : null } */}\n                </li>\n            }) : null }\n            { props.from === 'progressBoard' ? <div onClick={() => setVisible(false)}>Hide</div> : null }\n        </div>\n        : <div onClick={() => setVisible(true)}>Show</div> } \n        </div>\n    )\n}\n\nexport default HattingSequence;","import React, { useState, useMemo, useContext, useEffect, useRef } from 'react';\nimport { fireStore } from '../../firebase';\nimport firebase from 'firebase/app';\nimport { Button, Col, Collapse, Row, Progress, Radio, Checkbox, Tooltip, Divider } from 'antd';\n\nimport findHeldFromAboveOLD from '../../functions/findHeldFromAboveOLD';\nimport DivisionsCollapse from './DivisionsCollapse';\nimport DepartmentsCollapse from './DepartmentsCollapse';\nimport HatsCollapse from './HatsCollapse';\nimport Spinner from '../spinner/Spinner';\n//import ProgressLine from './ProgressLine';\n\nimport { AuthContext } from '../../context/Context';\nimport HattingSequence from './HattingSequence';\n\nlet nonStateHatPacks = []\nlet uniqueHatPacks = [];\n\nfunction Hatting(props) {\n\n    const [referencesRead, setReferencesRead] = useState([])\n    const [references, setReferences] = useState([])\n\n    const [radioValue, setRadioValue] = useState('byPost')\n\n    const [openPannel, setOpenPannel] = useState(null)\n    const [hats, setHats] = useState(null)\n    const [exects, setExects] = useState(null)\n    const [divisions, setDivisions] = useState(null)\n    const [departments, setDepartments] = useState(null)\n\n    const [userPostObj, setUserPostObj] = useState(null)\n    const [postArr, setPostArr] = useState([])\n\n    useEffect(async() => {\n        console.log(props.allPosts);\n        fireStore.collection(\"users\").doc(props.dbKey).collection('employees').doc(props.userInfo.uid).get().then((snapshot) => { \n            setReferencesRead(snapshot.data().referencesRead);\n        })\n    \n        let allHats = []\n        let allDepartments = []\n        let allDivisions = []\n        let allExects = []\n\n        props.allPosts.forEach((post) => {\n\n            findHeldFromAboveOLD(post, props.dbKey).then((children) => {\n                children.map((obj) => {\n                    if (obj.type === 'hat' && !obj.section ) {\n                        allHats.push(obj)\n                    } else if (obj.type  === 'depts') {\n                        allDepartments.push(obj)\n                    } else if (obj.type  === 'divs') {\n                        allDivisions.push(obj)\n                    } else if (obj.type  === 'exect') {\n                        allExects.push(obj)\n                    }\n                    return null;\n                })\n            }).then(() => {\n                allDivisions.sort((a, b) => { return a.position - b.position })\n                allExects.sort((a, b) => { return a.position - b.position })\n                allHats.sort((a, b) => { return a.position - b.position })\n                setHats(allHats)\n                setDepartments(allDepartments)\n                setDivisions(allDivisions)\n                setExects(allExects)\n            }).then(() => {\n                // console.log('HATS', allHats)\n                // console.log('DEPTS', allDepartments)\n                // console.log('DIVS', allDivisions)\n                // console.log('EXECTS', allExects);\n                setRadioValue('notByPost');\n            })\n\n        })\n\n\n    }, [props])\n\n    let onCheckChange = (e, item) => {\n        if (e.target.checked) {\n            item.completeDate = new firebase.firestore.Timestamp.now()\n            let referencesReadTemp = referencesRead.concat(item)\n            setReferencesRead(referencesReadTemp)\n            fireStore.collection(\"users\").doc(props.dbKey).collection('employees').doc(props.userInfo.uid).update({\n                referencesRead: referencesReadTemp\n            })\n        } else {\n            let referencesReadTemp = referencesRead.filter(e => e.name !== item.name)\n            setReferencesRead(referencesReadTemp)\n            fireStore.collection(\"users\").doc(props.dbKey).collection('employees').doc(props.userInfo.uid).update({\n                referencesRead: referencesReadTemp\n            })\n        }\n    }\n\n    const Panel = Collapse.Panel;\n\n    let onlyHattingMaterial = (item) => {\n        \n        if (item.hatPacks.length) {\n            item.hatPacks.map((item) => {\n                nonStateHatPacks = nonStateHatPacks.concat({ user: props.userInfo.uid, item: item })\n                if (nonStateHatPacks.length) {\n                    nonStateHatPacks.map(x => uniqueHatPacks.filter(a => a.item.item.name == x.item.name && a.user == x.user).length > 0 ? null : uniqueHatPacks.push({item: x, user: props.userInfo.uid}))\n                    //nonStateHatPacks.map(x => uniqueHatPacks.filter( a => console.log(a.user, x.user) ).length > 0 ? null : uniqueHatPacks.push({item: x, user: props.userInfo.uid}))\n                }\n            })\n        }\n\n        if (item.references.length) {\n            item.references.map((item) => {\n                nonStateHatPacks = nonStateHatPacks.concat({ user: props.userInfo.uid, item: item })\n                if (nonStateHatPacks.length) {\n                    nonStateHatPacks.map(x => uniqueHatPacks.filter(a => a.item.item.name == x.item.name && a.user == x.user).length > 0 ? null : uniqueHatPacks.push({item: x, user: props.userInfo.uid}))\n                }\n            })\n        }\n\n        //a.item.item.name, x.item.name\n        \n    }\n\n    let pannelBody = (item) => {\n            return <div>\n            <Divider orientation=\"left\">Hat Packs</Divider>\n            { item.hatPacks.map((hatPack, i) => {\n                return <div>\n                    <div key={i} style={{ marginLeft: '1em' }}><b>{hatPack.name}</b></div>\n                    {hatPack.references.map((ref, i) => {\n                        return <div>\n                            <div key={i} style={{ cursor: 'pointer', marginLeft: '3em'  }} onClick={() => window.open(ref.url, \"_blank\")}><i>{ref.name}</i>\n                            <span style={{ float: 'right' }}>\n                                <Tooltip title=\"By checking this box you are attesting that you have read, understand, and can apply this reference\">\n                                    <Checkbox onChange={(e) => onCheckChange(e, ref)} checked={referencesRead.some(e => e.name === ref.name)}></Checkbox>\n                                </Tooltip>\n                            </span>\n                            </div>\n                            {/* <div style={{ marginLeft: '-1em' }}><ProgressLine statName={stat} dbKey={dbKey} /></div> */}\n                        </div>\n                    })}\n                    {/* <div style={{ marginLeft: '-1em' }}><ProgressLine statName={stat} dbKey={dbKey} /></div> */}\n                </div>\n            }) }\n            <br />\n          <Divider orientation=\"left\">Individual References</Divider> \n            {item.references.map((ref, ii) => {\n                return <div onClick={() => console.log(ref)} >\n                    <div key={ii} style={{ marginLeft: '3em' }}><i style={{ cursor: 'pointer' }} onClick={() => window.open(ref.url, \"_blank\")} >{ref.name}</i>\n                    <span style={{ float: 'right' }}>\n                        <Tooltip title=\"By checking this box you are attesting that you have read, understand, and can apply this reference\">\n                            <Checkbox onChange={(e) => onCheckChange(e, ref)} checked={referencesRead.some(e => e.name === ref.name)}></Checkbox>\n                        </Tooltip>\n                    </span>\n                    </div>\n                    {/* <div style={{ marginLeft: '-1em' }}><ProgressLine statName={stat} dbKey={dbKey} /></div> */}\n                </div>\n            })}\n        </div>\n        \n    }\n    let pannelRender = (item, i) => {\n        if ((item.hatPacks && item.hatPacks.length) || (item.references && item.references.length)) {\n            return <Panel showArrow={false} header={<b style={{ fontSize: '115%' }}>{item.post}</b>} key={i} >\n                { onlyHattingMaterial(item)  }\n                { pannelBody(item) }\n            </Panel>\n        }\n    }\n    let pannelOpen = (i) => {\n        setOpenPannel(i)\n    }\n\n    let renderByMainPost = (post) => {\n\n            switch (post.type) {\n\n                case 'owner':\n\n                    return [\n\n                        <div key={post.post} style={{ marginLeft: '2em' }}>\n                            <Collapse bordered={false} accordion={true} onChange={(i) => setOpenPannel(i)}>\n                                {divisions ? divisions.map((div, i) => {\n                                    return [pannelRender(div, i + 10),\n                                    departments ?\n                                        <DepartmentsCollapse divisions={divisions} parrent={div} departments={departments} hats={hats} post={post} pannelRender={pannelRender} pannelOpen={pannelOpen} />\n                                        : null,\n                                    hats ?\n                                        <HatsCollapse divisions={divisions} parrent={div} departments={departments} hats={hats} post={post} pannelRender={pannelRender} pannelOpen={pannelOpen} />\n                                        : null\n                                    ]\n                                }\n                                ) : <Spinner text={'Loading Divisions'} />}\n                            </Collapse></div>\n                    ]\n\n                case 'ed':\n\n                    return [\n                        <Collapse key={post.id} bordered={false} accordion={true} onChange={(i) => setOpenPannel(i)}>\n                            {pannelRender(post, -1)}\n                        </Collapse>,\n\n                        exects && exects.length > 0 ?\n                            <div key={post.post} style={{ marginLeft: '2em' }}>\n                                <Collapse bordered={false} accordion={true} onChange={(i) => setOpenPannel(i)}>\n                                    {exects.map((exect, i) => {\n                                        return [pannelRender(exect, i + 10),\n                                        divisions ?\n                                            <DivisionsCollapse divisions={divisions} parrent={exect} departments={departments} hats={hats} post={post} pannelRender={pannelRender} pannelOpen={pannelOpen} />\n                                            : null]\n                                    }\n                                    )}\n                                </Collapse></div> : null\n                    ]\n\n                case 'exect':\n\n                    return [\n\n                        <div key={post.post} style={{ marginLeft: '2em' }}>\n                            <Collapse bordered={false} accordion={true} onChange={(i) => setOpenPannel(i)}>\n                                {exects ? exects.map((exect, i) => {\n                                    return [pannelRender(exect, i + 10),\n                                    divisions ?\n                                        <DivisionsCollapse divisions={divisions} parrent={exect} departments={departments} hats={hats} post={post} pannelRender={pannelRender} pannelOpen={pannelOpen} />\n                                        : null]\n                                }\n                                ) : <Spinner text={'Loading Executives'} />}\n                            </Collapse></div>\n                    ]\n\n                case 'divs':\n\n                    return [\n\n                        <div key={post.post} style={{ marginLeft: '2em' }}>\n                            <Collapse bordered={false} accordion={true} onChange={(i) => setOpenPannel(i)}>\n                                {divisions ? divisions.map((div, i) => {\n                                    return [pannelRender(div, i + 10),\n                                    departments ?\n                                        <DepartmentsCollapse divisions={divisions} parrent={div} departments={departments} hats={hats} post={post} pannelRender={pannelRender} pannelOpen={pannelOpen} />\n                                        : null,\n                                    hats ?\n                                        <HatsCollapse divisions={divisions} parrent={div} departments={departments} hats={hats} post={post} pannelRender={pannelRender} pannelOpen={pannelOpen} />\n                                        : null\n                                    ]\n                                }\n                                ) : <Spinner text={'Loading Divisions'} />}\n                            </Collapse></div>\n                    ]\n\n                case 'depts':\n\n                    return [\n\n                        <div key={post.post} style={{ marginLeft: '2em' }}>\n                            <Collapse bordered={false} accordion={true} onChange={(i) => setOpenPannel(i)}>\n                                {departments ? departments.map((dept, i) => {\n                                    return [pannelRender(dept, i + 10),\n                                    hats ?\n                                        <HatsCollapse divisions={divisions} parrent={dept} departments={departments} hats={hats} post={post} pannelRender={pannelRender} pannelOpen={pannelOpen} />\n                                        : null]\n                                }\n                                ) : <Spinner text={'Loading Departments'} />}\n                            </Collapse></div>\n                    ]\n\n                case 'hat':\n\n                    return <div key={post.post} style={{ marginLeft: '2em' }}>\n                        <Collapse bordered={false} accordion={true} onChange={(i) => setOpenPannel(i)}>\n\n                            {hats ? hats.map((hat, i) => {\n                                if (post.type === 'hat' && hat.childOf === post.childOf) {\n                                    return pannelRender(hat, i + 10)\n                                }\n                            })\n                            : <Spinner text={'Loading Departments'} />}\n\n                        </Collapse>\n                        \n                        </div>\n\n                default:\n                    return <h3>No Posts Assigned</h3>\n            }\n        \n    }\n\n    let onRadioChange = (e) => {\n        //fireStore.collection('users').doc(props.dbKey).collection('stats').doc(props.statName).update({ stats: stats })\n        setRadioValue(e.target.value);\n    }\n    const radioStyle = {\n        display: 'block',\n        height: '30px',\n        lineHeight: '30px',\n        fontWeight: 'bold',\n        color: '#dddddd'\n    };\n\n    return (\n        <div style={{ marginTop: '2em' }} >\n\n            {props.from === 'homePage' || props.from === 'progressBoard' ? \n                null :\n                <div style={{ marginLeft: '2em' }}>\n                    <Radio.Group onChange={(e) => onRadioChange(e)} value={radioValue}>\n                        <Radio style={radioStyle} value={'notByPost'}>My Hatting Sequence</Radio>\n                        <Radio style={radioStyle} value={'byPost'}>Hatting By Post</Radio>\n                    </Radio.Group>\n                    <hr />\n                </div>\n                }\n                \n            {radioValue === 'byPost' ?\n                <Row justify='center' >\n                    <Col span={12} className='hattingSequence'>{props.allPosts ? \n                    //renderByMainPost(props.allPosts) \n                    props.allPosts.map((post) => {\n                        return renderByMainPost(post) \n                    })\n                        : <div>No Posts Assigned</div>}</Col>\n                </Row>\n                :\n                <Row justify='center'>\n                    <Col span={ props.from !== 'homePage' ? 12 : 24} ><HattingSequence references={uniqueHatPacks} userInfo={props.userInfo} referencesRead={referencesRead} onCheckChange={onCheckChange} from={props.from} /></Col> \n                </Row>\n            }  \n\n        </div>\n    );\n}\n\nexport default Hatting;","import React, { useState, useMemo, useContext, useEffect, useRef } from 'react';\nimport { fireStore } from '../../firebase';\nimport firebase from 'firebase/app';\nimport { Button, Col, Collapse, Row, Progress, Radio, Checkbox, Tooltip, Divider } from 'antd';\n\nimport findHeldFromAboveOLD from '../../functions/findHeldFromAboveOLD';\nimport DivisionsCollapse from './DivisionsCollapse';\nimport DepartmentsCollapse from './DepartmentsCollapse';\nimport HatsCollapse from './HatsCollapse';\nimport Spinner from '../spinner/Spinner';\n//import ProgressLine from './ProgressLine';\n\nimport { AuthContext } from '../../context/Context';\nimport HattingSequence from './HattingSequence';\n\nlet nonStateHatPacks = []\nlet uniqueHatPacks = [];\n\nfunction Hatting(props) {\n\n    const [referencesRead, setReferencesRead] = useState([])\n    const [references, setReferences] = useState([])\n\n    const [radioValue, setRadioValue] = useState('byPost')\n\n    const [openPannel, setOpenPannel] = useState(null)\n    const [hats, setHats] = useState(null)\n    const [exects, setExects] = useState(null)\n    const [divisions, setDivisions] = useState(null)\n    const [departments, setDepartments] = useState(null)\n\n    const [userPostObj, setUserPostObj] = useState(null)\n\n    useEffect(async() => {\n        fireStore.collection(\"users\").doc(props.dbKey).collection('employees').doc(props.userInfo.uid).get().then((snapshot) => { \n            setReferencesRead(snapshot.data().referencesRead);\n        })\n    \n        let allHats = []\n        let allDepartments = []\n        let allDivisions = []\n        let allExects = []\n\n        await findHeldFromAboveOLD(props.nonHfaPost, props.dbKey).then((children) => {\n            children.map((obj) => {\n                if (obj.type === 'hat' && !obj.section ) {\n                    allHats.push(obj)\n                } else if (obj.type  === 'depts') {\n                    allDepartments.push(obj)\n                } else if (obj.type  === 'divs') {\n                    allDivisions.push(obj)\n                } else if (obj.type  === 'exect') {\n                    allExects.push(obj)\n                }\n                return null;\n            })\n        }).then(() => {\n            allDivisions.sort((a, b) => { return a.position - b.position })\n            allExects.sort((a, b) => { return a.position - b.position })\n            allHats.sort((a, b) => { return a.position - b.position })\n            setHats(allHats)\n            setDepartments(allDepartments)\n            setDivisions(allDivisions)\n            setExects(allExects)\n        }).then(() => {\n            setRadioValue('notByPost');\n        })\n\n    }, [props])\n\n    let onCheckChange = (e, item) => {\n        if (e.target.checked) {\n            item.completeDate = new firebase.firestore.Timestamp.now()\n            let referencesReadTemp = referencesRead.concat(item)\n            setReferencesRead(referencesReadTemp)\n            fireStore.collection(\"users\").doc(props.dbKey).collection('employees').doc(props.userInfo.uid).update({\n                referencesRead: referencesReadTemp\n            })\n        } else {\n            let referencesReadTemp = referencesRead.filter(e => e.name !== item.name)\n            setReferencesRead(referencesReadTemp)\n            fireStore.collection(\"users\").doc(props.dbKey).collection('employees').doc(props.userInfo.uid).update({\n                referencesRead: referencesReadTemp\n            })\n        }\n    }\n\n    const Panel = Collapse.Panel;\n\n    let onlyHattingMaterial = (item) => {\n        \n        if (item.hatPacks.length) {\n            item.hatPacks.map((item) => {\n                nonStateHatPacks = nonStateHatPacks.concat({ user: props.userInfo.uid, item: item })\n                if (nonStateHatPacks.length) {\n                    nonStateHatPacks.map(x => uniqueHatPacks.filter(a => a.item.item.name == x.item.name && a.user == x.user).length > 0 ? null : uniqueHatPacks.push({item: x, user: props.userInfo.uid}))\n                    //nonStateHatPacks.map(x => uniqueHatPacks.filter( a => console.log(a.user, x.user) ).length > 0 ? null : uniqueHatPacks.push({item: x, user: props.userInfo.uid}))\n                }\n            })\n        }\n\n        if (item.references.length) {\n            item.references.map((item) => {\n                nonStateHatPacks = nonStateHatPacks.concat({ user: props.userInfo.uid, item: item })\n                if (nonStateHatPacks.length) {\n                    nonStateHatPacks.map(x => uniqueHatPacks.filter(a => a.item.item.name == x.item.name && a.user == x.user).length > 0 ? null : uniqueHatPacks.push({item: x, user: props.userInfo.uid}))\n                }\n            })\n        }\n\n        //a.item.item.name, x.item.name\n        \n    }\n\n    let pannelBody = (item) => {\n            return <div>\n            <Divider orientation=\"left\">Hat Packs</Divider>\n            { item.hatPacks.map((hatPack, i) => {\n                return <div>\n                    <div key={i} style={{ marginLeft: '1em' }}><b>{hatPack.name}</b></div>\n                    {hatPack.references.map((ref, i) => {\n                        return <div>\n                            <div key={i} style={{ cursor: 'pointer', marginLeft: '3em'  }} onClick={() => window.open(ref.url, \"_blank\")}><i>{ref.name}</i>\n                            <span style={{ float: 'right' }}>\n                                <Tooltip title=\"By checking this box you are attesting that you have read, understand, and can apply this reference\">\n                                    <Checkbox onChange={(e) => onCheckChange(e, ref)} checked={referencesRead.some(e => e.name === ref.name)}></Checkbox>\n                                </Tooltip>\n                            </span>\n                            </div>\n                            {/* <div style={{ marginLeft: '-1em' }}><ProgressLine statName={stat} dbKey={dbKey} /></div> */}\n                        </div>\n                    })}\n                    {/* <div style={{ marginLeft: '-1em' }}><ProgressLine statName={stat} dbKey={dbKey} /></div> */}\n                </div>\n            }) }\n            <br />\n          <Divider orientation=\"left\">Individual References</Divider> \n            {item.references.map((ref, ii) => {\n                return <div onClick={() => console.log(ref)} >\n                    <div key={ii} style={{ marginLeft: '3em' }}><i style={{ cursor: 'pointer' }} onClick={() => window.open(ref.url, \"_blank\")} >{ref.name}</i>\n                    <span style={{ float: 'right' }}>\n                        <Tooltip title=\"By checking this box you are attesting that you have read, understand, and can apply this reference\">\n                            <Checkbox onChange={(e) => onCheckChange(e, ref)} checked={referencesRead.some(e => e.name === ref.name)}></Checkbox>\n                        </Tooltip>\n                    </span>\n                    </div>\n                    {/* <div style={{ marginLeft: '-1em' }}><ProgressLine statName={stat} dbKey={dbKey} /></div> */}\n                </div>\n            })}\n        </div>\n        \n    }\n    let pannelRender = (item, i) => {\n        if ((item.hatPacks && item.hatPacks.length) || (item.references && item.references.length)) {\n            return <Panel showArrow={false} header={<b style={{ fontSize: '115%' }}>{item.post}</b>} key={i} >\n                { onlyHattingMaterial(item)  }\n                { pannelBody(item) }\n            </Panel>\n        }\n    }\n    let pannelOpen = (i) => {\n        setOpenPannel(i)\n    }\n\n    let renderByMainPost = () => {\n\n\n        switch (props.nonHfaPost.type) {\n\n            case 'owner':\n\n            return [\n\n                <div key={props.nonHfaPost.post} style={{ marginLeft: '2em' }}>\n                <Collapse bordered={false} accordion={true} onChange={(i) => setOpenPannel(i)}>\n                    {divisions ? divisions.map((div, i) => {\n                        return [pannelRender(div, i + 10),\n                        departments ?\n                            <DepartmentsCollapse divisions={divisions} parrent={div} departments={departments} hats={hats} post={props.nonHfaPost} pannelRender={pannelRender} pannelOpen={pannelOpen} />\n                            : null,\n                        hats ?\n                            <HatsCollapse divisions={divisions} parrent={div} departments={departments} hats={hats} post={props.nonHfaPost} pannelRender={pannelRender} pannelOpen={pannelOpen} />\n                            : null\n                        ]\n                    }\n                    ) : <Spinner text={'Loading Divisions'} />}\n                </Collapse></div>\n            ]\n            \n            case 'ed':\n\n                return [\n                    <Collapse key={props.nonHfaPost.id} bordered={false} accordion={true} onChange={(i) => setOpenPannel(i)}>\n                        {pannelRender(props.nonHfaPost, -1)}\n                    </Collapse>,\n                    \n                    exects && exects.length > 0 ?\n                        <div key={props.nonHfaPost.post} style={{ marginLeft: '2em' }}>\n                            <Collapse bordered={false} accordion={true} onChange={(i) => setOpenPannel(i)}>\n                                {exects.map((exect, i) => {\n                                    return [pannelRender(exect, i + 10),\n                                    divisions ?\n                                        <DivisionsCollapse divisions={divisions} parrent={exect} departments={departments} hats={hats} post={props.nonHfaPost} pannelRender={pannelRender} pannelOpen={pannelOpen} />\n                                        : null]\n                                }\n                                )}\n                            </Collapse></div> : null\n                ]\n\n            case 'exect':\n   \n                return [\n\n                    <div key={props.nonHfaPost.post} style={{ marginLeft: '2em' }}>\n                        <Collapse bordered={false} accordion={true} onChange={(i) => setOpenPannel(i)}>\n                            {exects ? exects.map((exect, i) => {\n                                return [pannelRender(exect, i + 10),\n                                divisions ?\n                                    <DivisionsCollapse divisions={divisions} parrent={exect} departments={departments} hats={hats} post={props.nonHfaPost} pannelRender={pannelRender} pannelOpen={pannelOpen} />\n                                    : null]\n                            }\n                            ) : <Spinner text={'Loading Executives'} />}\n                        </Collapse></div>\n                ]\n\n            case 'divs':\n\n                return [\n\n                    <div key={props.nonHfaPost.post} style={{ marginLeft: '2em' }}>\n                        <Collapse bordered={false} accordion={true} onChange={(i) => setOpenPannel(i)}>\n                            {divisions ? divisions.map((div, i) => {\n                                return [pannelRender(div, i + 10),\n                                departments ?\n                                    <DepartmentsCollapse divisions={divisions} parrent={div} departments={departments} hats={hats} post={props.nonHfaPost} pannelRender={pannelRender} pannelOpen={pannelOpen} />\n                                    : null,\n                                hats ?\n                                    <HatsCollapse divisions={divisions} parrent={div} departments={departments} hats={hats} post={props.nonHfaPost} pannelRender={pannelRender} pannelOpen={pannelOpen} />\n                                    : null\n                                ]\n                            }\n                            ) : <Spinner text={'Loading Divisions'} />}\n                        </Collapse></div>\n                ]\n\n            case 'depts':\n\n                return [\n\n                    <div key={props.nonHfaPost.post} style={{ marginLeft: '2em' }}>\n                        <Collapse bordered={false} accordion={true} onChange={(i) => setOpenPannel(i)}>\n                            {departments ? departments.map((dept, i) => {\n                                return [pannelRender(dept, i + 10),\n                                hats ?\n                                    <HatsCollapse divisions={divisions} parrent={dept} departments={departments} hats={hats} post={props.nonHfaPost} pannelRender={pannelRender} pannelOpen={pannelOpen} />\n                                    : null]\n                            }\n                            ) : <Spinner text={'Loading Departments'} />}\n                        </Collapse></div>\n                ]\n\n            case 'hat':\n\n                return <div key={props.nonHfaPost.post} style={{ marginLeft: '2em' }}>\n                    <Collapse bordered={false} accordion={true} onChange={(i) => setOpenPannel(i)}>\n                        {hats ? hats.map((hat, i) => {\n                            return pannelRender(hat, i + 10)\n                        })\n                            : <Spinner text={'Loading Departments'} />}\n                    </Collapse></div>\n\n            default:\n                return <h3>No Posts Assigned</h3>\n        }\n    }\n\n    let onRadioChange = (e) => {\n        //fireStore.collection('users').doc(props.dbKey).collection('stats').doc(props.statName).update({ stats: stats })\n        setRadioValue(e.target.value);\n    }\n    const radioStyle = {\n        display: 'block',\n        height: '30px',\n        lineHeight: '30px',\n        fontWeight: 'bold',\n        color: '#dddddd'\n    };\n\n    return (\n        <div style={{ marginTop: '2em' }} >\n\n            {props.from === 'homePage' || props.from === 'progressBoard' ? \n                null :\n                <div style={{ marginLeft: '2em' }}>\n                    <Radio.Group onChange={(e) => onRadioChange(e)} value={radioValue}>\n                        <Radio style={radioStyle} value={'notByPost'}>My Hatting Sequence</Radio>\n                        <Radio style={radioStyle} value={'byPost'}>Hatting By Post</Radio>\n                    </Radio.Group>\n                    <hr />\n                </div>\n                }\n\n            {radioValue === 'byPost' ?\n                <Row justify='center' >\n                    <Col span={12} className='hattingSequence'>{props.nonHfaPost ? renderByMainPost() : <div>No Posts Assigned</div>}</Col>\n                </Row>\n                :\n                <Row justify='center'>\n                    <Col span={ props.from !== 'homePage' ? 12 : 24} ><HattingSequence references={uniqueHatPacks} userInfo={props.userInfo} referencesRead={referencesRead} onCheckChange={onCheckChange} from={props.from} /></Col> \n                </Row>\n            }\n        </div>\n    );\n}\n\nexport default Hatting;","import React, { useState, useEffect, useContext } from 'react';\nimport { fireStore } from '../../firebase';\nimport { AuthContext } from '../../context/Context';\n\nimport Hatting from '../newHatting/Hatting';\n\nfunction ProgressBoard(props) {\n\n    const [allNonHfaPosts, setAllNonHfaPosts] = useState(null)\n    const [allPosts, setAllPosts] = useState(null)\n\n    const { dbKey } = useContext(AuthContext);\n\n    useEffect(async () => {\n       \n        if (dbKey) {\n\n            let allPostsTemp = []\n\n            await fireStore.collection(\"users\").doc(dbKey).collection('orgBoard').where('employee.uid', '==', props.employee.uid).where('employee.hfa', '==', false).onSnapshot((snapshot) => {\n                snapshot.docs.forEach((doc, i) => {\n                    allPostsTemp.push(doc.data())\n                })\n                fireStore.collection(\"users\").doc(dbKey).collection('orgBoard').where('multiEmployeeArr', 'array-contains', {name: props.employee.name, uid: props.employee.uid}).get().then((snap) => {\n                    snap.docs.forEach((doc, i) => {\n                        allPostsTemp.push(doc.data());\n                    })\n                    setAllPosts(allPostsTemp)\n                })\n            })\n        }\n    }, [dbKey, props])\n\n    return (\n        <div className='progressBoard'>\n\n\n\n            <div style={{ textAlign: 'center' }}><b>{props.employee.name}: </b></div>\n            { allPosts ? <div>\n                    {/* <div style={{ textAlign: 'center' }}>{ post.post }</div> */}\n                    <Hatting allPosts={allPosts} dbKey={dbKey} userInfo={props.employee} from='progressBoard' /> \n                        < hr />\n                    </div>\n            : <div style={{ margin: '5em', textAlign: 'center' }}><h3 style={{ color: '#dddddd' }}>No posts are assigned to {props.employee.name}</h3></div>}\n\n        </div>\n    )\n}\n\nexport default ProgressBoard;","import React, { useState, useEffect, useContext } from 'react';\nimport { fireStore } from '../../firebase';\nimport { AuthContext } from '../../context/Context';\n\nimport Hatting from '../hatting/Hatting';\nimport ProgressBoard from './ProgressBoard';\n\nfunction ProgressBoardWrapper(props) {\n\n    const [allEmployees, setAllEmployees] = useState(null)\n\n    const { dbKey, userInfo, currentUser } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (dbKey) {\n            let allEmployeeTemp = []\n            fireStore.collection(\"users\").doc(dbKey).collection('employees').get().then((snapshot) => {\n                snapshot.forEach((employee) => {\n                    if (employee.data().id !== 'kiosk') {\n                        allEmployeeTemp.push(employee.data())\n                    }\n                })\n                setAllEmployees(allEmployeeTemp)\n            })\n        }\n    }, [dbKey])\n\n    return (\n        <div className='progressBoardWrapper' style={{ color: '#DDDDDD', marginTop: '3em' }}>\n            {allEmployees ? allEmployees.map((employee) => {\n                return <div>\n                    <ProgressBoard employee={employee} />\n                </div>\n                //return console.log(employee.name);\n            }) : null}\n        </div>\n    )\n}\n\nexport default ProgressBoardWrapper;"],"sourceRoot":""}