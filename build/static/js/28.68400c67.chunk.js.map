{"version":3,"sources":["components/statSubmission/InputStats.js","components/managementDashboard/ManagementGraph.js","components/managementDashboard/Test.js","components/managementDashboard/ManagementDashboardWrapper.js"],"names":["Option","Select","InputStats","props","useState","statData","setStatData","setDataData","weekArr","setWeekArr","selectedWeek","setSelectedWeek","statInput","setStatInput","text","setText","useEffect","fireStore","collection","doc","dbKey","statName","onSnapshot","snap","a","data","stats","weekArrTemp","map","week","push","value","name","dateFormat","length","justify","style","padding","span","width","onChange","e","onInputChange","placeholder","target","onClick","notes","date","firebase","firestore","Timestamp","now","statEntered","enteredBy","user","displayName","indexOf","find","o","concat","stat","update","submitStat","disabled","ManagementGraph","graphModal","setGraphModal","fullStatData","setFullStatData","dataData","dotModal","setDotModal","dotData","setDotData","helpBy","setHelpBy","postName","setPostName","inputModal","setInputModal","useContext","AuthContext","userInfo","currentUser","console","log","slice","postData","postId","snapshot","employee","uid","CustomizedDot","x","cx","y","cy","from","payload","dot","cursor","transform","xAxisTickFormatter","item","boxShadow","className","textAlign","ResponsiveContainer","aspect","LineChart","margin","top","right","left","bottom","isAnimationActive","CartesianGrid","strokeDasharray","XAxis","dataKey","tickFormatter","height","angle","dy","YAxis","type","Legend","Line","stroke","Brush","startIndex","endIndex","hide","reversed","upsideDown","label","visible","onCancel","footer","Tooltip","content","active","border","background","Date","admin","placement","title","onConfirm","deleteStat","okText","cancelText","color","float","note","i","toDate","Test","statArr","setStatArr","keyStats","setKeyStats","allStatsModal","setAllStatsModal","tempStatArr","tempKeyStats","client","get","then","res","docs","marginBottom","ManagementDashboardWrapper","logout","clientList","setClientList","clientArr","businessName","marginTop","marginLeft","k"],"mappings":"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","file":"static/js/28.68400c67.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext, lazy, Suspense } from 'react';\nimport { fireStore } from '../../firebase';\nimport firebase from 'firebase/app';\nimport { Button, Col, Row, InputNumber, Input, Select } from 'antd';\nimport dateFormat from 'dateformat';\n\nconst { Option } = Select;\n\nfunction InputStats(props) {\n\n    const [statData, setStatData] = useState(null)\n    const [dataData, setDataData] = useState(null)\n    const [weekArr, setWeekArr] = useState(null)\n    const [selectedWeek, setSelectedWeek] = useState(null)\n\n    const [statInput, setStatInput] = useState(null)\n    const [text, setText] = useState(null)\n    //const [stats, setStats] = useState(null)\n    const [fullStatData, setFullStatData] = useState([])\n\n\n    useEffect(() => {\n\n        setStatInput(null)\n        setText(null)\n\n        fireStore.collection('users').doc(props.dbKey).collection('stats').doc(props.statName).onSnapshot(async(snap) => {\n            setDataData(snap.data().data)\n            setStatData(snap.data().stats)\n            let weekArrTemp = []\n            await snap.data().stats.map((week) => {\n                weekArrTemp.push(<Option value={week.name}>{dateFormat(week.name, \"mm/d\")}</Option>);\n            })\n            setWeekArr(weekArrTemp)\n            setSelectedWeek(weekArrTemp[weekArrTemp.length - 1].props.value)\n        })\n    }, [props])\n\n    let onInputChange = (e) => {\n        setStatInput(e);\n    }\n    let onTextChange = (e) => {\n        setText(e.target.value);\n    }\n    let handleChange = (value) => {\n        setSelectedWeek(value)\n      }\n\n    let submitStat = () => {\n\n        let stats = statData\n        let notes = { date: new firebase.firestore.Timestamp.now(), statEntered: statInput, text: text, enteredBy: props.user.displayName }\n\n        stats[stats.indexOf(stats.find(o => o.name === selectedWeek))].notes = stats[stats.indexOf(stats.find(o => o.name === selectedWeek))].notes.concat(notes)\n        stats[stats.indexOf(stats.find(o => o.name === selectedWeek))].stat = stats[stats.indexOf(stats.find(o => o.name === selectedWeek))].stat + statInput\n\n        fireStore.collection('users').doc(props.dbKey).collection('stats').doc(props.statName).update({ stats: stats })\n\n        setStatInput(null)\n        setText(null)\n\n    }\n\n    return (<div>\n\n\n        <Row justify=\"center\" style={{ padding: '2em' }}>\n\n            <Col span={5}>\n                <Select value={selectedWeek} style={{ width: 120 }} onChange={handleChange}>\n                    {weekArr}\n                </Select>\n            </Col>\n            <Col span={3}><InputNumber onChange={(e) => onInputChange(e)} placeholder=\"Stat\" value={statInput} /></Col>\n            <Col span={13}><Input onChange={onTextChange} placeholder=\"Enter any notes\" value={text}></Input></Col>\n            <Col span={1}><Button onClick={() => { submitStat() }} disabled={statInput ? false : true} >Submit</Button></Col>\n\n        </Row>\n\n\n\n\n    </div>)\n}\n\nexport default InputStats","import React, { useState, useEffect, useContext } from 'react';\nimport { fireStore } from '../../firebase';\nimport { Modal, Button, Popconfirm } from 'antd';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Brush } from 'recharts';\nimport dateFormat from 'dateformat';\n\nimport InputStats from '../statSubmission/InputStats'\n\nimport { AuthContext } from '../../context/Context';\n\nfunction ManagementGraph(props) {\n\n    // const [clickedDot, setClickedDot] = useState(null)\n    // const [openDataPoint, setOpenDataPoint] = useState(null)\n    // const [dataEdit, setDataEdit] = useState(false)\n    // const [editNumber, setEditNumber] = useState(null)\n    const [graphModal, setGraphModal] = useState(false)\n    const [statData, setStatData] = useState(null)\n    const [fullStatData, setFullStatData] = useState(null)\n    const [dataData, setDataData] = useState(null)\n\n    const [dotModal, setDotModal] = useState(false)\n    const [dotData, setDotData] = useState(null)\n\n    const [helpBy, setHelpBy] = useState(null)\n    const [postName, setPostName] = useState(null)\n\n    const [inputModal, setInputModal] = useState(false)\n\n    const { dbKey, userInfo, currentUser } = useContext(AuthContext);\n\n    useEffect(() => {\n            console.log(props);\n            fireStore.collection('users').doc(props.dbKey).collection('stats').doc(props.statName).onSnapshot((snap) => {\n                if (snap.data()) {\n                    setDataData(snap.data().data)\n                    setStatData(snap.data().stats.slice(snap.data().stats.length >= 12 ? snap.data().stats.length - 12 : 0, snap.data().stats.length))\n                    setFullStatData(snap.data().stats)\n                }\n                if (snap.data() && snap.data().data.postData) {\n                    setPostName(snap.data().data.postData.postName)\n                    fireStore.collection('users').doc(props.dbKey).collection('orgBoard').doc(snap.data().data.postData.postId).onSnapshot((snapshot) => {\n                        if (snapshot.data() && snapshot.data().employee) {\n                            setHelpBy({name: snapshot.data().employee.name, uid: snapshot.data().employee.uid})\n                        }\n                    })\n                }\n            })\n    }, [props])\n\n    // let editDataPoint = () => {\n    //     setDataEdit(true)\n    // }\n\n    // let closeDot = () => {\n    //     setOpenDataPoint(false)\n    //     setClickedDot(null)\n    // }\n\n    let dot = (e) => {\n        if (graphModal || props.from === 'statSubmission') {\n            setDotData(e.payload);\n            setDotModal(true)\n            //setOpenDataPoint(true)\n        }\n    }\n    let closeDotModal = () => {\n        setDotModal(false)\n        setDotData(null);\n    }\n\n    let closeInputModal = () => {\n        setInputModal(false)\n    }\n\n    // ----- EDIT DATA POINT -------\n\n    // let editNum = (e) => {\n    //     setEditNumber(e)\n    // }\n    // let editTxt = (e) => {\n    //     setEditText(e.target.value)\n    // }\n    // let submitEdit = (stats) => {\n    //     setDataEdit(false)\n    //     //let statLocation = '.stats'\n    //     clickedDot.edit = { editBy: currentUser.displayName, editText: editText, editNumber: editNumber, editDate: new firebase.firestore.Timestamp.now(), oldStat: stats[stats.indexOf(stats.find(o => o.name === clickedDot.name))].stat }\n    //     stats[stats.indexOf(stats.find(o => o.name === clickedDot.name))] = clickedDot\n    //     stats[stats.indexOf(stats.find(o => o.name === clickedDot.name))].stat = editNumber\n    //     fireStore.collection(\"users\").doc(dbKey).collection(props.item.id).doc('stats').update({ stats : stats })\n    // }\n\n    // ----- EDIT DATA POINT -------\n\n    let CustomizedDot = (e) => <svg x={e.cx} y={e.cy - 40} onClick={() => dot(e)} style={{ cursor: 'pointer'}}> \n        <text transform={`rotate(90)`} >{e.value}</text>\n        </svg>\n    \n\n    let xAxisTickFormatter = (date) => {\n        return dateFormat(date, \"mm/d\");\n    }\n\n    let customTooltipOnYourLine = (e) => {\n        if (e.active && e.payload != null && e.payload[0] != null) {\n            return (<div className=\"custom-tooltip\" style={{ border: '1px, solid, gray', background: 'white', padding: '5px' }}>\n                <p><b>STAT: {e.payload[0].payload.stat}</b></p>\n                <p>{dateFormat(new Date(e.payload[0].payload.name), \"mmmm dS\")}</p>\n                {/* <hr />\n                {e.payload[0].payload.notes.map((note, i) => {\n                    console.log(dateFormat(note.date.toDate(), \"mmmm dS\" ))\n                    return <div key={i}>{note.text}</div>\n                })} */}\n            </div>);\n        }\n        else {\n            return \"\";\n        }\n    }\n\n    // let style = dataData && dataData.upsideDown ? \n    //     {boxShadow: statData[statData.length - 1].stat >= statData[statData.length - 2].stat ? \n    //         '0px 0px 4px 0px #a93c2d' : '0px 0px 4px 0px #22812e' } \n    //     :\n    //     {boxShadow: statData[statData.length - 1].stat <= statData[statData.length - 2].stat ? \n    //         '12px 12px 25px #a93c2d, -10px -10px 25px #ffffff' : '12px 12px 25px #22812e, -10px -10px 25px #ffffff' } \n\n    let style = (item) => {\n        return item ? { boxShadow: item[item.length - 1].stat <= item[item.length - 2].stat ? \n            '5px 5px 20px #a93c2d' : '5px 5px 20px green' } : null \n    }\n \n\n// the styling is determined by className passed to this component (because it's called from multiple places)\n    return <div className={props.from} style={props.from === 'oicGraphs' ? style(statData) : null } > \n\n        <div style={{ textAlign: 'center', padding: '15px' }}>\n            {helpBy && props.from === 'oicGraphs' ? helpBy.name + ': ' : null}{postName ? postName : null}\n            { console.log(props.from) }\n        </div>\n\n        <ResponsiveContainer width=\"100%\" aspect={2}>\n            <LineChart\n                data={statData}\n                margin={{\n                    top: 40, right: 40, left: 10, bottom: 10,\n                }}\n                //className={props.from} \n                onClick={() => props.from !== 'statSubmission' ? setGraphModal(true) : null }\n                isAnimationActive={false}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" tickFormatter={xAxisTickFormatter} height={55} angle={90} dy={20} padding={{ left: -2, right: -2 }} />\n\n                <YAxis type=\"number\" dataKey=\"stat\" />\n                {/* <Tooltip content={customTooltipOnYourLine} /> */}\n\n                <Legend />\n                <Line\n                    dot={CustomizedDot} \n                    type=\"linear\" \n                    // activeDot={{ onClick: (e) => dot(e) }}\n                    dataKey='stat' name={props.statName}\n                    stroke=\"#000000\"\n                />\n                \n                {fullStatData && props.from === 'statSubmission' ?\n                    <Brush\n                        dataKey=\"name\"\n                        tickFormatter={xAxisTickFormatter}\n                        stroke=\"#000000\"\n                        startIndex={fullStatData.length >= 12 ? fullStatData.length - 12 : 0}\n                        endIndex={fullStatData.length - 1}\n                    >\n\n                        <LineChart\n                            data={statData}\n                        >\n                            <YAxis hide={true} reversed={dataData.upsideDown} />\n                            <Line dataKey=\"stat\" stroke=\"#8884d8\" label={false} />\n                        </LineChart>\n\n                    </Brush>\n                    : null}\n\n            </LineChart>\n        </ResponsiveContainer>\n\n        {dataData && fullStatData ?\n            <Modal\n                visible={graphModal}\n                onCancel={() => setGraphModal(false)}\n                width={'80%'}\n                footer={null}\n            >\n\n                <ResponsiveContainer width=\"100%\" aspect={2}>\n                    <LineChart\n                        data={fullStatData}\n                        margin={{\n                            top: 40, right: 40, left: 10, bottom: 10,\n                        }}\n                        //className={}\n                        onClick={() => setGraphModal(true)}\n                        style={style}\n                    >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" tickFormatter={xAxisTickFormatter} height={55} angle={90} dy={20} padding={{ left: -2, right: -2 }} />\n\n                        <YAxis type=\"number\" dataKey=\"stat\" />\n                        <Tooltip content={customTooltipOnYourLine} />\n\n                        <Legend />\n                        <Line\n                            dot={CustomizedDot} \n                            type=\"linear\"\n                            // activeDot={{ onClick: (e) => dot(e) }}\n                            dataKey='stat' name={props.statName}\n                            stroke=\"#7B98A1\"\n                        />\n\n                        <Brush\n                            dataKey=\"name\"\n                            tickFormatter={xAxisTickFormatter}\n                            stroke=\"#000000\"\n                        startIndex={fullStatData.length >= 12 ? fullStatData.length - 12 : 0}\n                        endIndex={fullStatData.length - 1}\n                        >\n\n                            <LineChart\n                                data={statData}\n                            >\n                                <YAxis hide={true} reversed={dataData.upsideDown} />\n                                <Line dataKey=\"stat\" stroke=\"#8884d8\" label={false} />\n                            </LineChart>\n\n                        </Brush>\n\n                    </LineChart>\n                </ResponsiveContainer>\n                { props.from === 'post' && userInfo.admin ? \n                    <Popconfirm placement=\"leftTop\" title={`Are you sure you want to delete ${props.statName}?`} onConfirm={() => [props.deleteStat(props.statName), setGraphModal(false)]} okText=\"Yes\" cancelText=\"No\">\n                        <div style={{ color: 'red', float: 'right', cursor: 'pointer' }}>Delete</div>\n                    </Popconfirm>\n                : null }\n\n            </Modal>\n            : null}\n\n\n\n{dotData ?\n            <Modal\n                visible={dotModal}\n                onCancel={() => closeDotModal()}\n                footer={null}\n            >\n        \n            <div>\n                <p>{props.statName}</p>\n                <p><b>STAT: {dotData.stat}</b></p>\n                <p>{dateFormat(new Date(dotData.name), \"mmmm dS\")}</p>\n                <hr />\n                {dotData.notes.map((note, i) => {\n                    console.log(dateFormat(note.date.toDate(), \"mmmm dS - hh:MM TT\" ))\n                    return <div key={i}>\n                        <span style={{ color: 'gray' }}>\n                            {note.enteredBy} {dateFormat(note.date.toDate(), \"mmmm dS - hh:MM TT\")} \n                        </span>: {note.text}\n                    </div>\n                })}\n            </div> \n\n\n            </Modal>\n            : null}\n\n{/* <InputStats statName={graph} from='statSubmission' dbKey={dbKey} user={currentUser}/> */}\n\n        <Modal\n            visible={inputModal}\n            onCancel={() => closeInputModal()}\n            width={'50%'}\n            footer={null}\n        >\n\n        <InputStats statName={props.statName} from='oic' dbKey={dbKey} user={currentUser}/>\n\n        </Modal>\n\n    </div>\n  \n}\n\nexport default ManagementGraph;","import React, { useState, useEffect, useContext } from 'react';\nimport { fireStore } from '../../firebase';\nimport { Col, Row, Modal } from 'antd';\nimport { AuthContext } from '../../context/Context';\n\nimport ManagementGraph from './ManagementGraph';\n\nfunction Test(props) {\n\n    const [statArr, setStatArr] = useState(null)\n    const [keyStats, setKeyStats] = useState(null)\n\n    const [allStatsModal, setAllStatsModal] = useState(false)\n \n    useEffect( async () => {\n        let tempStatArr = [];\n        let tempKeyStats = []\n        await fireStore.collection(\"users\").doc(props.client).collection('stats').get().then((res) => {\n            res.docs.map((item) => {\n                if (item.data().data.name === \"PRODUCTION\" || item.data().data.name ===  \"COLLECTIONS\" || item.data().data.name ===  \"GROSS INCOME\" ) {\n                    tempKeyStats.push(item.data().data.name);\n                } \n                tempStatArr.push(item.data().data.name);\n            });\n            //console.log(tempKeyStats);\n            setStatArr(tempStatArr)\n            setKeyStats(tempKeyStats)\n        })\n\n        // fireStore.collection('users').doc(props.client).collection('stats').doc('COLLECTIONS').onSnapshot((snap) => {\n        //     if (snap.data()) {\n        //         console.log(snap.data().stats)\n        //     }\n        // })\n\n    }, [props.client])\n\n    return (\n        <div>\n            <Row className='test' justify=\"space-around\">\n                <Col span={21}><div style={{ cursor: 'pointer' }} onClick={() => setAllStatsModal(true)} >See All Stats</div></Col>\n                {keyStats ? keyStats.map((stat, i) => {\n                    return <Col span={7} key={i} style={{ marginBottom: '2em' }}>\n                        <ManagementGraph key={i} dbKey={props.client} statName={stat} from='oicGraphs' />\n                    </Col>\n                })\n                    : null}\n            </Row>\n        \n        { statArr ? \n            <Modal\n                visible={allStatsModal}\n                onCancel={() => setAllStatsModal(false)}\n                width={2000}\n                footer={null}\n            >\n                <Row className='test' justify=\"space-around\">\n                    {statArr.map((stat, i) => {\n                        return <Col span={7} key={i + 125} style={{ marginBottom: '2em' }}>\n                            <ManagementGraph key={i + 125} dbKey={props.client} statName={stat} from='oicGraphs' />\n                        </Col>\n                    })}\n                </Row>\n            </Modal> \n        : null }\n\n        </div>\n    )\n}\n\nexport default Test;","import React, { useState, useEffect, useContext } from 'react';\nimport { fireStore } from '../../firebase';\nimport { AuthContext } from '../../context/Context';\nimport Test from './Test';\n\nfunction ManagementDashboardWrapper() {\n\n    const { logout } = useContext(AuthContext);\n\n    const [clientList, setClientList] = useState([])\n\n    useEffect( async () => {\n        \n        let clientArr = []\n        await fireStore.collection(\"users\").get().then((snapshot) => {\n            snapshot.docs.map((doc) => {\n                    if (doc.data().businessName) {\n                        clientArr.push(doc.data().businessName)\n                    }\n                })\n                setClientList(clientArr)\n            })\n    }, [])\n\n    return (\n        <div className='managementDashboardWrapper' style={{ marginTop: '3em' }}>\n            <div onClick={() => logout()} style={{ cursor: 'pointer', color: '#dddddd', marginLeft: '2em' }}>logout</div>\n\n            {clientList.length ? clientList.map((client, k) => {\n                return <div key={k} style={{ marginBottom: '5em' }}>\n                    <h1 style={{ color: '#dddddd', margin: '1em' }}>{client}</h1>\n                    <Test client={client} />\n                    </div>\n            }) : null}\n\n        </div>\n    )\n}\n\nexport default ManagementDashboardWrapper;"],"sourceRoot":""}